//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace test.ServiceReference1 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="experts", Namespace="http://schemas.datacontract.org/2004/07/WcfService1")]
    [System.SerializableAttribute()]
    public partial class experts : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int accessField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<test.ServiceReference1.experts_expertises> experts_expertisesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string first_nameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int id_expertField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string loginField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<test.ServiceReference1.marks> marksField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<test.ServiceReference1.marks_factors> marks_factorsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<test.ServiceReference1.marks_ribs> marks_ribsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string passwordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string patronymicField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<test.ServiceReference1.results_experts> results_expertsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string second_nameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int access {
            get {
                return this.accessField;
            }
            set {
                if ((this.accessField.Equals(value) != true)) {
                    this.accessField = value;
                    this.RaisePropertyChanged("access");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<test.ServiceReference1.experts_expertises> experts_expertises {
            get {
                return this.experts_expertisesField;
            }
            set {
                if ((object.ReferenceEquals(this.experts_expertisesField, value) != true)) {
                    this.experts_expertisesField = value;
                    this.RaisePropertyChanged("experts_expertises");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string first_name {
            get {
                return this.first_nameField;
            }
            set {
                if ((object.ReferenceEquals(this.first_nameField, value) != true)) {
                    this.first_nameField = value;
                    this.RaisePropertyChanged("first_name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int id_expert {
            get {
                return this.id_expertField;
            }
            set {
                if ((this.id_expertField.Equals(value) != true)) {
                    this.id_expertField = value;
                    this.RaisePropertyChanged("id_expert");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string login {
            get {
                return this.loginField;
            }
            set {
                if ((object.ReferenceEquals(this.loginField, value) != true)) {
                    this.loginField = value;
                    this.RaisePropertyChanged("login");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<test.ServiceReference1.marks> marks {
            get {
                return this.marksField;
            }
            set {
                if ((object.ReferenceEquals(this.marksField, value) != true)) {
                    this.marksField = value;
                    this.RaisePropertyChanged("marks");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<test.ServiceReference1.marks_factors> marks_factors {
            get {
                return this.marks_factorsField;
            }
            set {
                if ((object.ReferenceEquals(this.marks_factorsField, value) != true)) {
                    this.marks_factorsField = value;
                    this.RaisePropertyChanged("marks_factors");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<test.ServiceReference1.marks_ribs> marks_ribs {
            get {
                return this.marks_ribsField;
            }
            set {
                if ((object.ReferenceEquals(this.marks_ribsField, value) != true)) {
                    this.marks_ribsField = value;
                    this.RaisePropertyChanged("marks_ribs");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string password {
            get {
                return this.passwordField;
            }
            set {
                if ((object.ReferenceEquals(this.passwordField, value) != true)) {
                    this.passwordField = value;
                    this.RaisePropertyChanged("password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string patronymic {
            get {
                return this.patronymicField;
            }
            set {
                if ((object.ReferenceEquals(this.patronymicField, value) != true)) {
                    this.patronymicField = value;
                    this.RaisePropertyChanged("patronymic");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<test.ServiceReference1.results_experts> results_experts {
            get {
                return this.results_expertsField;
            }
            set {
                if ((object.ReferenceEquals(this.results_expertsField, value) != true)) {
                    this.results_expertsField = value;
                    this.RaisePropertyChanged("results_experts");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string second_name {
            get {
                return this.second_nameField;
            }
            set {
                if ((object.ReferenceEquals(this.second_nameField, value) != true)) {
                    this.second_nameField = value;
                    this.RaisePropertyChanged("second_name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="experts_expertises", Namespace="http://schemas.datacontract.org/2004/07/WcfService1")]
    [System.SerializableAttribute()]
    public partial class experts_expertises : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private test.ServiceReference1.Status StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private test.ServiceReference1.expertises expertisesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private test.ServiceReference1.experts expertsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int id_expertField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int id_expertiseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int id_expertises_expertsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int id_statusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool roleField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public test.ServiceReference1.Status Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public test.ServiceReference1.expertises expertises {
            get {
                return this.expertisesField;
            }
            set {
                if ((object.ReferenceEquals(this.expertisesField, value) != true)) {
                    this.expertisesField = value;
                    this.RaisePropertyChanged("expertises");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public test.ServiceReference1.experts experts {
            get {
                return this.expertsField;
            }
            set {
                if ((object.ReferenceEquals(this.expertsField, value) != true)) {
                    this.expertsField = value;
                    this.RaisePropertyChanged("experts");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int id_expert {
            get {
                return this.id_expertField;
            }
            set {
                if ((this.id_expertField.Equals(value) != true)) {
                    this.id_expertField = value;
                    this.RaisePropertyChanged("id_expert");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int id_expertise {
            get {
                return this.id_expertiseField;
            }
            set {
                if ((this.id_expertiseField.Equals(value) != true)) {
                    this.id_expertiseField = value;
                    this.RaisePropertyChanged("id_expertise");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int id_expertises_experts {
            get {
                return this.id_expertises_expertsField;
            }
            set {
                if ((this.id_expertises_expertsField.Equals(value) != true)) {
                    this.id_expertises_expertsField = value;
                    this.RaisePropertyChanged("id_expertises_experts");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int id_status {
            get {
                return this.id_statusField;
            }
            set {
                if ((this.id_statusField.Equals(value) != true)) {
                    this.id_statusField = value;
                    this.RaisePropertyChanged("id_status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool role {
            get {
                return this.roleField;
            }
            set {
                if ((this.roleField.Equals(value) != true)) {
                    this.roleField = value;
                    this.RaisePropertyChanged("role");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="marks", Namespace="http://schemas.datacontract.org/2004/07/WcfService1")]
    [System.SerializableAttribute()]
    public partial class marks : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private test.ServiceReference1.criterions criterionsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private test.ServiceReference1.expertises expertisesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private test.ServiceReference1.experts expertsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int id_criterionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int id_expertField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int id_expertiseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int id_markField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int id_projectField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private test.ServiceReference1.projects projectsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double valueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public test.ServiceReference1.criterions criterions {
            get {
                return this.criterionsField;
            }
            set {
                if ((object.ReferenceEquals(this.criterionsField, value) != true)) {
                    this.criterionsField = value;
                    this.RaisePropertyChanged("criterions");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public test.ServiceReference1.expertises expertises {
            get {
                return this.expertisesField;
            }
            set {
                if ((object.ReferenceEquals(this.expertisesField, value) != true)) {
                    this.expertisesField = value;
                    this.RaisePropertyChanged("expertises");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public test.ServiceReference1.experts experts {
            get {
                return this.expertsField;
            }
            set {
                if ((object.ReferenceEquals(this.expertsField, value) != true)) {
                    this.expertsField = value;
                    this.RaisePropertyChanged("experts");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int id_criterion {
            get {
                return this.id_criterionField;
            }
            set {
                if ((this.id_criterionField.Equals(value) != true)) {
                    this.id_criterionField = value;
                    this.RaisePropertyChanged("id_criterion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int id_expert {
            get {
                return this.id_expertField;
            }
            set {
                if ((this.id_expertField.Equals(value) != true)) {
                    this.id_expertField = value;
                    this.RaisePropertyChanged("id_expert");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int id_expertise {
            get {
                return this.id_expertiseField;
            }
            set {
                if ((this.id_expertiseField.Equals(value) != true)) {
                    this.id_expertiseField = value;
                    this.RaisePropertyChanged("id_expertise");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int id_mark {
            get {
                return this.id_markField;
            }
            set {
                if ((this.id_markField.Equals(value) != true)) {
                    this.id_markField = value;
                    this.RaisePropertyChanged("id_mark");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int id_project {
            get {
                return this.id_projectField;
            }
            set {
                if ((this.id_projectField.Equals(value) != true)) {
                    this.id_projectField = value;
                    this.RaisePropertyChanged("id_project");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public test.ServiceReference1.projects projects {
            get {
                return this.projectsField;
            }
            set {
                if ((object.ReferenceEquals(this.projectsField, value) != true)) {
                    this.projectsField = value;
                    this.RaisePropertyChanged("projects");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double value {
            get {
                return this.valueField;
            }
            set {
                if ((this.valueField.Equals(value) != true)) {
                    this.valueField = value;
                    this.RaisePropertyChanged("value");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="marks_factors", Namespace="http://schemas.datacontract.org/2004/07/WcfService1")]
    [System.SerializableAttribute()]
    public partial class marks_factors : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private test.ServiceReference1.expertises expertisesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private test.ServiceReference1.experts expertsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private test.ServiceReference1.factors factorsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int id_expertField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int id_expertiseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int id_factorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int id_markField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double valueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public test.ServiceReference1.expertises expertises {
            get {
                return this.expertisesField;
            }
            set {
                if ((object.ReferenceEquals(this.expertisesField, value) != true)) {
                    this.expertisesField = value;
                    this.RaisePropertyChanged("expertises");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public test.ServiceReference1.experts experts {
            get {
                return this.expertsField;
            }
            set {
                if ((object.ReferenceEquals(this.expertsField, value) != true)) {
                    this.expertsField = value;
                    this.RaisePropertyChanged("experts");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public test.ServiceReference1.factors factors {
            get {
                return this.factorsField;
            }
            set {
                if ((object.ReferenceEquals(this.factorsField, value) != true)) {
                    this.factorsField = value;
                    this.RaisePropertyChanged("factors");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int id_expert {
            get {
                return this.id_expertField;
            }
            set {
                if ((this.id_expertField.Equals(value) != true)) {
                    this.id_expertField = value;
                    this.RaisePropertyChanged("id_expert");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int id_expertise {
            get {
                return this.id_expertiseField;
            }
            set {
                if ((this.id_expertiseField.Equals(value) != true)) {
                    this.id_expertiseField = value;
                    this.RaisePropertyChanged("id_expertise");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int id_factor {
            get {
                return this.id_factorField;
            }
            set {
                if ((this.id_factorField.Equals(value) != true)) {
                    this.id_factorField = value;
                    this.RaisePropertyChanged("id_factor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int id_mark {
            get {
                return this.id_markField;
            }
            set {
                if ((this.id_markField.Equals(value) != true)) {
                    this.id_markField = value;
                    this.RaisePropertyChanged("id_mark");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double value {
            get {
                return this.valueField;
            }
            set {
                if ((this.valueField.Equals(value) != true)) {
                    this.valueField = value;
                    this.RaisePropertyChanged("value");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="marks_ribs", Namespace="http://schemas.datacontract.org/2004/07/WcfService1")]
    [System.SerializableAttribute()]
    public partial class marks_ribs : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private test.ServiceReference1.expertises expertisesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private test.ServiceReference1.experts expertsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int id_expertField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int id_expertiseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int id_mark_ribField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int id_ribField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private test.ServiceReference1.ribs ribsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double valueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public test.ServiceReference1.expertises expertises {
            get {
                return this.expertisesField;
            }
            set {
                if ((object.ReferenceEquals(this.expertisesField, value) != true)) {
                    this.expertisesField = value;
                    this.RaisePropertyChanged("expertises");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public test.ServiceReference1.experts experts {
            get {
                return this.expertsField;
            }
            set {
                if ((object.ReferenceEquals(this.expertsField, value) != true)) {
                    this.expertsField = value;
                    this.RaisePropertyChanged("experts");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int id_expert {
            get {
                return this.id_expertField;
            }
            set {
                if ((this.id_expertField.Equals(value) != true)) {
                    this.id_expertField = value;
                    this.RaisePropertyChanged("id_expert");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int id_expertise {
            get {
                return this.id_expertiseField;
            }
            set {
                if ((this.id_expertiseField.Equals(value) != true)) {
                    this.id_expertiseField = value;
                    this.RaisePropertyChanged("id_expertise");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int id_mark_rib {
            get {
                return this.id_mark_ribField;
            }
            set {
                if ((this.id_mark_ribField.Equals(value) != true)) {
                    this.id_mark_ribField = value;
                    this.RaisePropertyChanged("id_mark_rib");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int id_rib {
            get {
                return this.id_ribField;
            }
            set {
                if ((this.id_ribField.Equals(value) != true)) {
                    this.id_ribField = value;
                    this.RaisePropertyChanged("id_rib");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public test.ServiceReference1.ribs ribs {
            get {
                return this.ribsField;
            }
            set {
                if ((object.ReferenceEquals(this.ribsField, value) != true)) {
                    this.ribsField = value;
                    this.RaisePropertyChanged("ribs");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double value {
            get {
                return this.valueField;
            }
            set {
                if ((this.valueField.Equals(value) != true)) {
                    this.valueField = value;
                    this.RaisePropertyChanged("value");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="results_experts", Namespace="http://schemas.datacontract.org/2004/07/WcfService1")]
    [System.SerializableAttribute()]
    public partial class results_experts : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private test.ServiceReference1.expertises expertisesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private test.ServiceReference1.experts expertsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int id_expertField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int id_expertiseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int id_projectField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int id_result_expertField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private test.ServiceReference1.projects projectsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double valueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public test.ServiceReference1.expertises expertises {
            get {
                return this.expertisesField;
            }
            set {
                if ((object.ReferenceEquals(this.expertisesField, value) != true)) {
                    this.expertisesField = value;
                    this.RaisePropertyChanged("expertises");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public test.ServiceReference1.experts experts {
            get {
                return this.expertsField;
            }
            set {
                if ((object.ReferenceEquals(this.expertsField, value) != true)) {
                    this.expertsField = value;
                    this.RaisePropertyChanged("experts");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int id_expert {
            get {
                return this.id_expertField;
            }
            set {
                if ((this.id_expertField.Equals(value) != true)) {
                    this.id_expertField = value;
                    this.RaisePropertyChanged("id_expert");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int id_expertise {
            get {
                return this.id_expertiseField;
            }
            set {
                if ((this.id_expertiseField.Equals(value) != true)) {
                    this.id_expertiseField = value;
                    this.RaisePropertyChanged("id_expertise");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int id_project {
            get {
                return this.id_projectField;
            }
            set {
                if ((this.id_projectField.Equals(value) != true)) {
                    this.id_projectField = value;
                    this.RaisePropertyChanged("id_project");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int id_result_expert {
            get {
                return this.id_result_expertField;
            }
            set {
                if ((this.id_result_expertField.Equals(value) != true)) {
                    this.id_result_expertField = value;
                    this.RaisePropertyChanged("id_result_expert");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public test.ServiceReference1.projects projects {
            get {
                return this.projectsField;
            }
            set {
                if ((object.ReferenceEquals(this.projectsField, value) != true)) {
                    this.projectsField = value;
                    this.RaisePropertyChanged("projects");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double value {
            get {
                return this.valueField;
            }
            set {
                if ((this.valueField.Equals(value) != true)) {
                    this.valueField = value;
                    this.RaisePropertyChanged("value");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Status", Namespace="http://schemas.datacontract.org/2004/07/WcfService1")]
    [System.SerializableAttribute()]
    public partial class Status : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<test.ServiceReference1.expertises> expertisesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<test.ServiceReference1.experts_expertises> experts_expertisesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int id_statusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string name_statusField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<test.ServiceReference1.expertises> expertises {
            get {
                return this.expertisesField;
            }
            set {
                if ((object.ReferenceEquals(this.expertisesField, value) != true)) {
                    this.expertisesField = value;
                    this.RaisePropertyChanged("expertises");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<test.ServiceReference1.experts_expertises> experts_expertises {
            get {
                return this.experts_expertisesField;
            }
            set {
                if ((object.ReferenceEquals(this.experts_expertisesField, value) != true)) {
                    this.experts_expertisesField = value;
                    this.RaisePropertyChanged("experts_expertises");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int id_status {
            get {
                return this.id_statusField;
            }
            set {
                if ((this.id_statusField.Equals(value) != true)) {
                    this.id_statusField = value;
                    this.RaisePropertyChanged("id_status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string name_status {
            get {
                return this.name_statusField;
            }
            set {
                if ((object.ReferenceEquals(this.name_statusField, value) != true)) {
                    this.name_statusField = value;
                    this.RaisePropertyChanged("name_status");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="expertises", Namespace="http://schemas.datacontract.org/2004/07/WcfService1")]
    [System.SerializableAttribute()]
    public partial class expertises : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private test.ServiceReference1.Status StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<test.ServiceReference1.expertises_criterions> expertises_criterionsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<test.ServiceReference1.experts_expertises> experts_expertisesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<test.ServiceReference1.factors> factorsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int id_expertiseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int id_statusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<test.ServiceReference1.marks> marksField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<test.ServiceReference1.marks_factors> marks_factorsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<test.ServiceReference1.marks_ribs> marks_ribsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string nameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<test.ServiceReference1.projects_expertises> projects_expertisesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<test.ServiceReference1.results_expertise> results_expertiseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<test.ServiceReference1.results_expertises_criterions> results_expertises_criterionsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<test.ServiceReference1.results_experts> results_expertsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<test.ServiceReference1.results_factors> results_factorsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<test.ServiceReference1.results_ribs> results_ribsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int typeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public test.ServiceReference1.Status Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<test.ServiceReference1.expertises_criterions> expertises_criterions {
            get {
                return this.expertises_criterionsField;
            }
            set {
                if ((object.ReferenceEquals(this.expertises_criterionsField, value) != true)) {
                    this.expertises_criterionsField = value;
                    this.RaisePropertyChanged("expertises_criterions");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<test.ServiceReference1.experts_expertises> experts_expertises {
            get {
                return this.experts_expertisesField;
            }
            set {
                if ((object.ReferenceEquals(this.experts_expertisesField, value) != true)) {
                    this.experts_expertisesField = value;
                    this.RaisePropertyChanged("experts_expertises");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<test.ServiceReference1.factors> factors {
            get {
                return this.factorsField;
            }
            set {
                if ((object.ReferenceEquals(this.factorsField, value) != true)) {
                    this.factorsField = value;
                    this.RaisePropertyChanged("factors");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int id_expertise {
            get {
                return this.id_expertiseField;
            }
            set {
                if ((this.id_expertiseField.Equals(value) != true)) {
                    this.id_expertiseField = value;
                    this.RaisePropertyChanged("id_expertise");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int id_status {
            get {
                return this.id_statusField;
            }
            set {
                if ((this.id_statusField.Equals(value) != true)) {
                    this.id_statusField = value;
                    this.RaisePropertyChanged("id_status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<test.ServiceReference1.marks> marks {
            get {
                return this.marksField;
            }
            set {
                if ((object.ReferenceEquals(this.marksField, value) != true)) {
                    this.marksField = value;
                    this.RaisePropertyChanged("marks");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<test.ServiceReference1.marks_factors> marks_factors {
            get {
                return this.marks_factorsField;
            }
            set {
                if ((object.ReferenceEquals(this.marks_factorsField, value) != true)) {
                    this.marks_factorsField = value;
                    this.RaisePropertyChanged("marks_factors");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<test.ServiceReference1.marks_ribs> marks_ribs {
            get {
                return this.marks_ribsField;
            }
            set {
                if ((object.ReferenceEquals(this.marks_ribsField, value) != true)) {
                    this.marks_ribsField = value;
                    this.RaisePropertyChanged("marks_ribs");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                if ((object.ReferenceEquals(this.nameField, value) != true)) {
                    this.nameField = value;
                    this.RaisePropertyChanged("name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<test.ServiceReference1.projects_expertises> projects_expertises {
            get {
                return this.projects_expertisesField;
            }
            set {
                if ((object.ReferenceEquals(this.projects_expertisesField, value) != true)) {
                    this.projects_expertisesField = value;
                    this.RaisePropertyChanged("projects_expertises");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<test.ServiceReference1.results_expertise> results_expertise {
            get {
                return this.results_expertiseField;
            }
            set {
                if ((object.ReferenceEquals(this.results_expertiseField, value) != true)) {
                    this.results_expertiseField = value;
                    this.RaisePropertyChanged("results_expertise");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<test.ServiceReference1.results_expertises_criterions> results_expertises_criterions {
            get {
                return this.results_expertises_criterionsField;
            }
            set {
                if ((object.ReferenceEquals(this.results_expertises_criterionsField, value) != true)) {
                    this.results_expertises_criterionsField = value;
                    this.RaisePropertyChanged("results_expertises_criterions");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<test.ServiceReference1.results_experts> results_experts {
            get {
                return this.results_expertsField;
            }
            set {
                if ((object.ReferenceEquals(this.results_expertsField, value) != true)) {
                    this.results_expertsField = value;
                    this.RaisePropertyChanged("results_experts");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<test.ServiceReference1.results_factors> results_factors {
            get {
                return this.results_factorsField;
            }
            set {
                if ((object.ReferenceEquals(this.results_factorsField, value) != true)) {
                    this.results_factorsField = value;
                    this.RaisePropertyChanged("results_factors");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<test.ServiceReference1.results_ribs> results_ribs {
            get {
                return this.results_ribsField;
            }
            set {
                if ((object.ReferenceEquals(this.results_ribsField, value) != true)) {
                    this.results_ribsField = value;
                    this.RaisePropertyChanged("results_ribs");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int type {
            get {
                return this.typeField;
            }
            set {
                if ((this.typeField.Equals(value) != true)) {
                    this.typeField = value;
                    this.RaisePropertyChanged("type");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="expertises_criterions", Namespace="http://schemas.datacontract.org/2004/07/WcfService1")]
    [System.SerializableAttribute()]
    public partial class expertises_criterions : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private test.ServiceReference1.criterions criterionsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private test.ServiceReference1.expertises expertisesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int id_criterionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int id_expertiseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int id_expertises_criterionsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double weightField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public test.ServiceReference1.criterions criterions {
            get {
                return this.criterionsField;
            }
            set {
                if ((object.ReferenceEquals(this.criterionsField, value) != true)) {
                    this.criterionsField = value;
                    this.RaisePropertyChanged("criterions");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public test.ServiceReference1.expertises expertises {
            get {
                return this.expertisesField;
            }
            set {
                if ((object.ReferenceEquals(this.expertisesField, value) != true)) {
                    this.expertisesField = value;
                    this.RaisePropertyChanged("expertises");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int id_criterion {
            get {
                return this.id_criterionField;
            }
            set {
                if ((this.id_criterionField.Equals(value) != true)) {
                    this.id_criterionField = value;
                    this.RaisePropertyChanged("id_criterion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int id_expertise {
            get {
                return this.id_expertiseField;
            }
            set {
                if ((this.id_expertiseField.Equals(value) != true)) {
                    this.id_expertiseField = value;
                    this.RaisePropertyChanged("id_expertise");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int id_expertises_criterions {
            get {
                return this.id_expertises_criterionsField;
            }
            set {
                if ((this.id_expertises_criterionsField.Equals(value) != true)) {
                    this.id_expertises_criterionsField = value;
                    this.RaisePropertyChanged("id_expertises_criterions");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double weight {
            get {
                return this.weightField;
            }
            set {
                if ((this.weightField.Equals(value) != true)) {
                    this.weightField = value;
                    this.RaisePropertyChanged("weight");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="factors", Namespace="http://schemas.datacontract.org/2004/07/WcfService1")]
    [System.SerializableAttribute()]
    public partial class factors : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private test.ServiceReference1.expertises expertisesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int id_expertiseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int id_factorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<test.ServiceReference1.marks_factors> marks_factorsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string nameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int priorityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<test.ServiceReference1.results_factors> results_factorsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<test.ServiceReference1.ribs> ribsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<test.ServiceReference1.ribs> ribs1Field;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public test.ServiceReference1.expertises expertises {
            get {
                return this.expertisesField;
            }
            set {
                if ((object.ReferenceEquals(this.expertisesField, value) != true)) {
                    this.expertisesField = value;
                    this.RaisePropertyChanged("expertises");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int id_expertise {
            get {
                return this.id_expertiseField;
            }
            set {
                if ((this.id_expertiseField.Equals(value) != true)) {
                    this.id_expertiseField = value;
                    this.RaisePropertyChanged("id_expertise");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int id_factor {
            get {
                return this.id_factorField;
            }
            set {
                if ((this.id_factorField.Equals(value) != true)) {
                    this.id_factorField = value;
                    this.RaisePropertyChanged("id_factor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<test.ServiceReference1.marks_factors> marks_factors {
            get {
                return this.marks_factorsField;
            }
            set {
                if ((object.ReferenceEquals(this.marks_factorsField, value) != true)) {
                    this.marks_factorsField = value;
                    this.RaisePropertyChanged("marks_factors");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                if ((object.ReferenceEquals(this.nameField, value) != true)) {
                    this.nameField = value;
                    this.RaisePropertyChanged("name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int priority {
            get {
                return this.priorityField;
            }
            set {
                if ((this.priorityField.Equals(value) != true)) {
                    this.priorityField = value;
                    this.RaisePropertyChanged("priority");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<test.ServiceReference1.results_factors> results_factors {
            get {
                return this.results_factorsField;
            }
            set {
                if ((object.ReferenceEquals(this.results_factorsField, value) != true)) {
                    this.results_factorsField = value;
                    this.RaisePropertyChanged("results_factors");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<test.ServiceReference1.ribs> ribs {
            get {
                return this.ribsField;
            }
            set {
                if ((object.ReferenceEquals(this.ribsField, value) != true)) {
                    this.ribsField = value;
                    this.RaisePropertyChanged("ribs");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<test.ServiceReference1.ribs> ribs1 {
            get {
                return this.ribs1Field;
            }
            set {
                if ((object.ReferenceEquals(this.ribs1Field, value) != true)) {
                    this.ribs1Field = value;
                    this.RaisePropertyChanged("ribs1");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="projects_expertises", Namespace="http://schemas.datacontract.org/2004/07/WcfService1")]
    [System.SerializableAttribute()]
    public partial class projects_expertises : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private test.ServiceReference1.expertises expertisesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int id_expertiseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int id_projectField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int id_project_expertiseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private test.ServiceReference1.projects projectsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public test.ServiceReference1.expertises expertises {
            get {
                return this.expertisesField;
            }
            set {
                if ((object.ReferenceEquals(this.expertisesField, value) != true)) {
                    this.expertisesField = value;
                    this.RaisePropertyChanged("expertises");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int id_expertise {
            get {
                return this.id_expertiseField;
            }
            set {
                if ((this.id_expertiseField.Equals(value) != true)) {
                    this.id_expertiseField = value;
                    this.RaisePropertyChanged("id_expertise");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int id_project {
            get {
                return this.id_projectField;
            }
            set {
                if ((this.id_projectField.Equals(value) != true)) {
                    this.id_projectField = value;
                    this.RaisePropertyChanged("id_project");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int id_project_expertise {
            get {
                return this.id_project_expertiseField;
            }
            set {
                if ((this.id_project_expertiseField.Equals(value) != true)) {
                    this.id_project_expertiseField = value;
                    this.RaisePropertyChanged("id_project_expertise");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public test.ServiceReference1.projects projects {
            get {
                return this.projectsField;
            }
            set {
                if ((object.ReferenceEquals(this.projectsField, value) != true)) {
                    this.projectsField = value;
                    this.RaisePropertyChanged("projects");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="results_expertise", Namespace="http://schemas.datacontract.org/2004/07/WcfService1")]
    [System.SerializableAttribute()]
    public partial class results_expertise : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private test.ServiceReference1.expertises expertisesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int id_expertiseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int id_projectField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int id_resultField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private test.ServiceReference1.projects projectsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double valueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public test.ServiceReference1.expertises expertises {
            get {
                return this.expertisesField;
            }
            set {
                if ((object.ReferenceEquals(this.expertisesField, value) != true)) {
                    this.expertisesField = value;
                    this.RaisePropertyChanged("expertises");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int id_expertise {
            get {
                return this.id_expertiseField;
            }
            set {
                if ((this.id_expertiseField.Equals(value) != true)) {
                    this.id_expertiseField = value;
                    this.RaisePropertyChanged("id_expertise");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int id_project {
            get {
                return this.id_projectField;
            }
            set {
                if ((this.id_projectField.Equals(value) != true)) {
                    this.id_projectField = value;
                    this.RaisePropertyChanged("id_project");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int id_result {
            get {
                return this.id_resultField;
            }
            set {
                if ((this.id_resultField.Equals(value) != true)) {
                    this.id_resultField = value;
                    this.RaisePropertyChanged("id_result");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public test.ServiceReference1.projects projects {
            get {
                return this.projectsField;
            }
            set {
                if ((object.ReferenceEquals(this.projectsField, value) != true)) {
                    this.projectsField = value;
                    this.RaisePropertyChanged("projects");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double value {
            get {
                return this.valueField;
            }
            set {
                if ((this.valueField.Equals(value) != true)) {
                    this.valueField = value;
                    this.RaisePropertyChanged("value");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="results_expertises_criterions", Namespace="http://schemas.datacontract.org/2004/07/WcfService1")]
    [System.SerializableAttribute()]
    public partial class results_expertises_criterions : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private test.ServiceReference1.criterions criterionsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private test.ServiceReference1.expertises expertisesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int id_criterionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int id_expertiseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int id_projectField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int id_resultField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private test.ServiceReference1.projects projectsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double valueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public test.ServiceReference1.criterions criterions {
            get {
                return this.criterionsField;
            }
            set {
                if ((object.ReferenceEquals(this.criterionsField, value) != true)) {
                    this.criterionsField = value;
                    this.RaisePropertyChanged("criterions");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public test.ServiceReference1.expertises expertises {
            get {
                return this.expertisesField;
            }
            set {
                if ((object.ReferenceEquals(this.expertisesField, value) != true)) {
                    this.expertisesField = value;
                    this.RaisePropertyChanged("expertises");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int id_criterion {
            get {
                return this.id_criterionField;
            }
            set {
                if ((this.id_criterionField.Equals(value) != true)) {
                    this.id_criterionField = value;
                    this.RaisePropertyChanged("id_criterion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int id_expertise {
            get {
                return this.id_expertiseField;
            }
            set {
                if ((this.id_expertiseField.Equals(value) != true)) {
                    this.id_expertiseField = value;
                    this.RaisePropertyChanged("id_expertise");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int id_project {
            get {
                return this.id_projectField;
            }
            set {
                if ((this.id_projectField.Equals(value) != true)) {
                    this.id_projectField = value;
                    this.RaisePropertyChanged("id_project");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int id_result {
            get {
                return this.id_resultField;
            }
            set {
                if ((this.id_resultField.Equals(value) != true)) {
                    this.id_resultField = value;
                    this.RaisePropertyChanged("id_result");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public test.ServiceReference1.projects projects {
            get {
                return this.projectsField;
            }
            set {
                if ((object.ReferenceEquals(this.projectsField, value) != true)) {
                    this.projectsField = value;
                    this.RaisePropertyChanged("projects");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double value {
            get {
                return this.valueField;
            }
            set {
                if ((this.valueField.Equals(value) != true)) {
                    this.valueField = value;
                    this.RaisePropertyChanged("value");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="results_factors", Namespace="http://schemas.datacontract.org/2004/07/WcfService1")]
    [System.SerializableAttribute()]
    public partial class results_factors : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private test.ServiceReference1.expertises expertisesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private test.ServiceReference1.factors factorsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int id_expertiseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int id_factorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int id_mark_result_factorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double valueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public test.ServiceReference1.expertises expertises {
            get {
                return this.expertisesField;
            }
            set {
                if ((object.ReferenceEquals(this.expertisesField, value) != true)) {
                    this.expertisesField = value;
                    this.RaisePropertyChanged("expertises");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public test.ServiceReference1.factors factors {
            get {
                return this.factorsField;
            }
            set {
                if ((object.ReferenceEquals(this.factorsField, value) != true)) {
                    this.factorsField = value;
                    this.RaisePropertyChanged("factors");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int id_expertise {
            get {
                return this.id_expertiseField;
            }
            set {
                if ((this.id_expertiseField.Equals(value) != true)) {
                    this.id_expertiseField = value;
                    this.RaisePropertyChanged("id_expertise");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int id_factor {
            get {
                return this.id_factorField;
            }
            set {
                if ((this.id_factorField.Equals(value) != true)) {
                    this.id_factorField = value;
                    this.RaisePropertyChanged("id_factor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int id_mark_result_factor {
            get {
                return this.id_mark_result_factorField;
            }
            set {
                if ((this.id_mark_result_factorField.Equals(value) != true)) {
                    this.id_mark_result_factorField = value;
                    this.RaisePropertyChanged("id_mark_result_factor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double value {
            get {
                return this.valueField;
            }
            set {
                if ((this.valueField.Equals(value) != true)) {
                    this.valueField = value;
                    this.RaisePropertyChanged("value");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="results_ribs", Namespace="http://schemas.datacontract.org/2004/07/WcfService1")]
    [System.SerializableAttribute()]
    public partial class results_ribs : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private test.ServiceReference1.expertises expertisesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int id_expertiseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int id_result_mark_ribField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int id_ribField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private test.ServiceReference1.ribs ribsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double valueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public test.ServiceReference1.expertises expertises {
            get {
                return this.expertisesField;
            }
            set {
                if ((object.ReferenceEquals(this.expertisesField, value) != true)) {
                    this.expertisesField = value;
                    this.RaisePropertyChanged("expertises");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int id_expertise {
            get {
                return this.id_expertiseField;
            }
            set {
                if ((this.id_expertiseField.Equals(value) != true)) {
                    this.id_expertiseField = value;
                    this.RaisePropertyChanged("id_expertise");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int id_result_mark_rib {
            get {
                return this.id_result_mark_ribField;
            }
            set {
                if ((this.id_result_mark_ribField.Equals(value) != true)) {
                    this.id_result_mark_ribField = value;
                    this.RaisePropertyChanged("id_result_mark_rib");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int id_rib {
            get {
                return this.id_ribField;
            }
            set {
                if ((this.id_ribField.Equals(value) != true)) {
                    this.id_ribField = value;
                    this.RaisePropertyChanged("id_rib");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public test.ServiceReference1.ribs ribs {
            get {
                return this.ribsField;
            }
            set {
                if ((object.ReferenceEquals(this.ribsField, value) != true)) {
                    this.ribsField = value;
                    this.RaisePropertyChanged("ribs");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double value {
            get {
                return this.valueField;
            }
            set {
                if ((this.valueField.Equals(value) != true)) {
                    this.valueField = value;
                    this.RaisePropertyChanged("value");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="criterions", Namespace="http://schemas.datacontract.org/2004/07/WcfService1")]
    [System.SerializableAttribute()]
    public partial class criterions : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<test.ServiceReference1.expertises_criterions> expertises_criterionsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int id_criterionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<test.ServiceReference1.marks> marksField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string nameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<test.ServiceReference1.results_expertises_criterions> results_expertises_criterionsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<test.ServiceReference1.expertises_criterions> expertises_criterions {
            get {
                return this.expertises_criterionsField;
            }
            set {
                if ((object.ReferenceEquals(this.expertises_criterionsField, value) != true)) {
                    this.expertises_criterionsField = value;
                    this.RaisePropertyChanged("expertises_criterions");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int id_criterion {
            get {
                return this.id_criterionField;
            }
            set {
                if ((this.id_criterionField.Equals(value) != true)) {
                    this.id_criterionField = value;
                    this.RaisePropertyChanged("id_criterion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<test.ServiceReference1.marks> marks {
            get {
                return this.marksField;
            }
            set {
                if ((object.ReferenceEquals(this.marksField, value) != true)) {
                    this.marksField = value;
                    this.RaisePropertyChanged("marks");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                if ((object.ReferenceEquals(this.nameField, value) != true)) {
                    this.nameField = value;
                    this.RaisePropertyChanged("name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<test.ServiceReference1.results_expertises_criterions> results_expertises_criterions {
            get {
                return this.results_expertises_criterionsField;
            }
            set {
                if ((object.ReferenceEquals(this.results_expertises_criterionsField, value) != true)) {
                    this.results_expertises_criterionsField = value;
                    this.RaisePropertyChanged("results_expertises_criterions");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="projects", Namespace="http://schemas.datacontract.org/2004/07/WcfService1")]
    [System.SerializableAttribute()]
    public partial class projects : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int id_projectField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<test.ServiceReference1.marks> marksField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string nameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<test.ServiceReference1.projects_expertises> projects_expertisesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<test.ServiceReference1.results_expertise> results_expertiseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<test.ServiceReference1.results_expertises_criterions> results_expertises_criterionsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<test.ServiceReference1.results_experts> results_expertsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int id_project {
            get {
                return this.id_projectField;
            }
            set {
                if ((this.id_projectField.Equals(value) != true)) {
                    this.id_projectField = value;
                    this.RaisePropertyChanged("id_project");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<test.ServiceReference1.marks> marks {
            get {
                return this.marksField;
            }
            set {
                if ((object.ReferenceEquals(this.marksField, value) != true)) {
                    this.marksField = value;
                    this.RaisePropertyChanged("marks");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                if ((object.ReferenceEquals(this.nameField, value) != true)) {
                    this.nameField = value;
                    this.RaisePropertyChanged("name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<test.ServiceReference1.projects_expertises> projects_expertises {
            get {
                return this.projects_expertisesField;
            }
            set {
                if ((object.ReferenceEquals(this.projects_expertisesField, value) != true)) {
                    this.projects_expertisesField = value;
                    this.RaisePropertyChanged("projects_expertises");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<test.ServiceReference1.results_expertise> results_expertise {
            get {
                return this.results_expertiseField;
            }
            set {
                if ((object.ReferenceEquals(this.results_expertiseField, value) != true)) {
                    this.results_expertiseField = value;
                    this.RaisePropertyChanged("results_expertise");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<test.ServiceReference1.results_expertises_criterions> results_expertises_criterions {
            get {
                return this.results_expertises_criterionsField;
            }
            set {
                if ((object.ReferenceEquals(this.results_expertises_criterionsField, value) != true)) {
                    this.results_expertises_criterionsField = value;
                    this.RaisePropertyChanged("results_expertises_criterions");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<test.ServiceReference1.results_experts> results_experts {
            get {
                return this.results_expertsField;
            }
            set {
                if ((object.ReferenceEquals(this.results_expertsField, value) != true)) {
                    this.results_expertsField = value;
                    this.RaisePropertyChanged("results_experts");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ribs", Namespace="http://schemas.datacontract.org/2004/07/WcfService1")]
    [System.SerializableAttribute()]
    public partial class ribs : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private test.ServiceReference1.factors factorsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private test.ServiceReference1.factors factors1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int id_factor_fromField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int id_factor_inField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int id_ribField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<test.ServiceReference1.marks_ribs> marks_ribsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<test.ServiceReference1.results_ribs> results_ribsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public test.ServiceReference1.factors factors {
            get {
                return this.factorsField;
            }
            set {
                if ((object.ReferenceEquals(this.factorsField, value) != true)) {
                    this.factorsField = value;
                    this.RaisePropertyChanged("factors");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public test.ServiceReference1.factors factors1 {
            get {
                return this.factors1Field;
            }
            set {
                if ((object.ReferenceEquals(this.factors1Field, value) != true)) {
                    this.factors1Field = value;
                    this.RaisePropertyChanged("factors1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int id_factor_from {
            get {
                return this.id_factor_fromField;
            }
            set {
                if ((this.id_factor_fromField.Equals(value) != true)) {
                    this.id_factor_fromField = value;
                    this.RaisePropertyChanged("id_factor_from");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int id_factor_in {
            get {
                return this.id_factor_inField;
            }
            set {
                if ((this.id_factor_inField.Equals(value) != true)) {
                    this.id_factor_inField = value;
                    this.RaisePropertyChanged("id_factor_in");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int id_rib {
            get {
                return this.id_ribField;
            }
            set {
                if ((this.id_ribField.Equals(value) != true)) {
                    this.id_ribField = value;
                    this.RaisePropertyChanged("id_rib");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<test.ServiceReference1.marks_ribs> marks_ribs {
            get {
                return this.marks_ribsField;
            }
            set {
                if ((object.ReferenceEquals(this.marks_ribsField, value) != true)) {
                    this.marks_ribsField = value;
                    this.RaisePropertyChanged("marks_ribs");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<test.ServiceReference1.results_ribs> results_ribs {
            get {
                return this.results_ribsField;
            }
            set {
                if ((object.ReferenceEquals(this.results_ribsField, value) != true)) {
                    this.results_ribsField = value;
                    this.RaisePropertyChanged("results_ribs");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="view_expertise_criterios", Namespace="http://schemas.datacontract.org/2004/07/WcfService1")]
    [System.SerializableAttribute()]
    public partial class view_expertise_criterios : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int id_expertiseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<test.ServiceReference1.expertises_criterions> list_ex_crField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<test.ServiceReference1.marks> list_marksField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<test.ServiceReference1.projects_expertises> list_pr_exField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int id_expertise {
            get {
                return this.id_expertiseField;
            }
            set {
                if ((this.id_expertiseField.Equals(value) != true)) {
                    this.id_expertiseField = value;
                    this.RaisePropertyChanged("id_expertise");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<test.ServiceReference1.expertises_criterions> list_ex_cr {
            get {
                return this.list_ex_crField;
            }
            set {
                if ((object.ReferenceEquals(this.list_ex_crField, value) != true)) {
                    this.list_ex_crField = value;
                    this.RaisePropertyChanged("list_ex_cr");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<test.ServiceReference1.marks> list_marks {
            get {
                return this.list_marksField;
            }
            set {
                if ((object.ReferenceEquals(this.list_marksField, value) != true)) {
                    this.list_marksField = value;
                    this.RaisePropertyChanged("list_marks");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<test.ServiceReference1.projects_expertises> list_pr_ex {
            get {
                return this.list_pr_exField;
            }
            set {
                if ((object.ReferenceEquals(this.list_pr_exField, value) != true)) {
                    this.list_pr_exField = value;
                    this.RaisePropertyChanged("list_pr_ex");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="view_completed_expertise", Namespace="http://schemas.datacontract.org/2004/07/WcfService1")]
    [System.SerializableAttribute()]
    public partial class view_completed_expertise : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int id_expertiseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<test.ServiceReference1.marks> list_marksField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<test.ServiceReference1.results_experts> list_res_exField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<test.ServiceReference1.results_expertises_criterions> list_res_ex_crField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<test.ServiceReference1.results_expertise> list_res_exppertiseField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int id_expertise {
            get {
                return this.id_expertiseField;
            }
            set {
                if ((this.id_expertiseField.Equals(value) != true)) {
                    this.id_expertiseField = value;
                    this.RaisePropertyChanged("id_expertise");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<test.ServiceReference1.marks> list_marks {
            get {
                return this.list_marksField;
            }
            set {
                if ((object.ReferenceEquals(this.list_marksField, value) != true)) {
                    this.list_marksField = value;
                    this.RaisePropertyChanged("list_marks");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<test.ServiceReference1.results_experts> list_res_ex {
            get {
                return this.list_res_exField;
            }
            set {
                if ((object.ReferenceEquals(this.list_res_exField, value) != true)) {
                    this.list_res_exField = value;
                    this.RaisePropertyChanged("list_res_ex");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<test.ServiceReference1.results_expertises_criterions> list_res_ex_cr {
            get {
                return this.list_res_ex_crField;
            }
            set {
                if ((object.ReferenceEquals(this.list_res_ex_crField, value) != true)) {
                    this.list_res_ex_crField = value;
                    this.RaisePropertyChanged("list_res_ex_cr");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<test.ServiceReference1.results_expertise> list_res_exppertise {
            get {
                return this.list_res_exppertiseField;
            }
            set {
                if ((object.ReferenceEquals(this.list_res_exppertiseField, value) != true)) {
                    this.list_res_exppertiseField = value;
                    this.RaisePropertyChanged("list_res_exppertise");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="view_completed_expertise_pospelov", Namespace="http://schemas.datacontract.org/2004/07/WcfService1")]
    [System.SerializableAttribute()]
    public partial class view_completed_expertise_pospelov : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private test.ServiceReference1.expertises expertisesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int id_expertiseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<test.ServiceReference1.marks_factors> list_marks_factorsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<test.ServiceReference1.marks_ribs> list_marks_ribsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<test.ServiceReference1.results_factors> list_results_factorsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<test.ServiceReference1.results_ribs> list_results_ribsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public test.ServiceReference1.expertises expertises {
            get {
                return this.expertisesField;
            }
            set {
                if ((object.ReferenceEquals(this.expertisesField, value) != true)) {
                    this.expertisesField = value;
                    this.RaisePropertyChanged("expertises");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int id_expertise {
            get {
                return this.id_expertiseField;
            }
            set {
                if ((this.id_expertiseField.Equals(value) != true)) {
                    this.id_expertiseField = value;
                    this.RaisePropertyChanged("id_expertise");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<test.ServiceReference1.marks_factors> list_marks_factors {
            get {
                return this.list_marks_factorsField;
            }
            set {
                if ((object.ReferenceEquals(this.list_marks_factorsField, value) != true)) {
                    this.list_marks_factorsField = value;
                    this.RaisePropertyChanged("list_marks_factors");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<test.ServiceReference1.marks_ribs> list_marks_ribs {
            get {
                return this.list_marks_ribsField;
            }
            set {
                if ((object.ReferenceEquals(this.list_marks_ribsField, value) != true)) {
                    this.list_marks_ribsField = value;
                    this.RaisePropertyChanged("list_marks_ribs");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<test.ServiceReference1.results_factors> list_results_factors {
            get {
                return this.list_results_factorsField;
            }
            set {
                if ((object.ReferenceEquals(this.list_results_factorsField, value) != true)) {
                    this.list_results_factorsField = value;
                    this.RaisePropertyChanged("list_results_factors");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<test.ServiceReference1.results_ribs> list_results_ribs {
            get {
                return this.list_results_ribsField;
            }
            set {
                if ((object.ReferenceEquals(this.list_results_ribsField, value) != true)) {
                    this.list_results_ribsField = value;
                    this.RaisePropertyChanged("list_results_ribs");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="view_expertise_pospelov", Namespace="http://schemas.datacontract.org/2004/07/WcfService1")]
    [System.SerializableAttribute()]
    public partial class view_expertise_pospelov : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int id_expertiseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<test.ServiceReference1.factors> list_factorsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<test.ServiceReference1.marks_factors> list_marks_factorsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<test.ServiceReference1.marks_ribs> list_marks_ribsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<test.ServiceReference1.ribs> list_ribsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int id_expertise {
            get {
                return this.id_expertiseField;
            }
            set {
                if ((this.id_expertiseField.Equals(value) != true)) {
                    this.id_expertiseField = value;
                    this.RaisePropertyChanged("id_expertise");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<test.ServiceReference1.factors> list_factors {
            get {
                return this.list_factorsField;
            }
            set {
                if ((object.ReferenceEquals(this.list_factorsField, value) != true)) {
                    this.list_factorsField = value;
                    this.RaisePropertyChanged("list_factors");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<test.ServiceReference1.marks_factors> list_marks_factors {
            get {
                return this.list_marks_factorsField;
            }
            set {
                if ((object.ReferenceEquals(this.list_marks_factorsField, value) != true)) {
                    this.list_marks_factorsField = value;
                    this.RaisePropertyChanged("list_marks_factors");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<test.ServiceReference1.marks_ribs> list_marks_ribs {
            get {
                return this.list_marks_ribsField;
            }
            set {
                if ((object.ReferenceEquals(this.list_marks_ribsField, value) != true)) {
                    this.list_marks_ribsField = value;
                    this.RaisePropertyChanged("list_marks_ribs");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<test.ServiceReference1.ribs> list_ribs {
            get {
                return this.list_ribsField;
            }
            set {
                if ((object.ReferenceEquals(this.list_ribsField, value) != true)) {
                    this.list_ribsField = value;
                    this.RaisePropertyChanged("list_ribs");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IService1")]
    public interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetListExperts", ReplyAction="http://tempuri.org/IService1/GetListExpertsResponse")]
        System.Collections.Generic.List<test.ServiceReference1.experts> GetListExperts();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/GetListExperts", ReplyAction="http://tempuri.org/IService1/GetListExpertsResponse")]
        System.IAsyncResult BeginGetListExperts(System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<test.ServiceReference1.experts> EndGetListExperts(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetListCriterions", ReplyAction="http://tempuri.org/IService1/GetListCriterionsResponse")]
        System.Collections.Generic.List<test.ServiceReference1.criterions> GetListCriterions();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/GetListCriterions", ReplyAction="http://tempuri.org/IService1/GetListCriterionsResponse")]
        System.IAsyncResult BeginGetListCriterions(System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<test.ServiceReference1.criterions> EndGetListCriterions(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetListProjects", ReplyAction="http://tempuri.org/IService1/GetListProjectsResponse")]
        System.Collections.Generic.List<test.ServiceReference1.projects> GetListProjects();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/GetListProjects", ReplyAction="http://tempuri.org/IService1/GetListProjectsResponse")]
        System.IAsyncResult BeginGetListProjects(System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<test.ServiceReference1.projects> EndGetListProjects(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetListCurrentExpertises", ReplyAction="http://tempuri.org/IService1/GetListCurrentExpertisesResponse")]
        System.Collections.Generic.List<test.ServiceReference1.expertises> GetListCurrentExpertises(int id_expert);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/GetListCurrentExpertises", ReplyAction="http://tempuri.org/IService1/GetListCurrentExpertisesResponse")]
        System.IAsyncResult BeginGetListCurrentExpertises(int id_expert, System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<test.ServiceReference1.expertises> EndGetListCurrentExpertises(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetListCompletedExpertises", ReplyAction="http://tempuri.org/IService1/GetListCompletedExpertisesResponse")]
        System.Collections.Generic.List<test.ServiceReference1.expertises> GetListCompletedExpertises();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/GetListCompletedExpertises", ReplyAction="http://tempuri.org/IService1/GetListCompletedExpertisesResponse")]
        System.IAsyncResult BeginGetListCompletedExpertises(System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<test.ServiceReference1.expertises> EndGetListCompletedExpertises(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetListExpertisesCriterions", ReplyAction="http://tempuri.org/IService1/GetListExpertisesCriterionsResponse")]
        test.ServiceReference1.view_expertise_criterios GetListExpertisesCriterions(int id_expertise, int id_expert);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/GetListExpertisesCriterions", ReplyAction="http://tempuri.org/IService1/GetListExpertisesCriterionsResponse")]
        System.IAsyncResult BeginGetListExpertisesCriterions(int id_expertise, int id_expert, System.AsyncCallback callback, object asyncState);
        
        test.ServiceReference1.view_expertise_criterios EndGetListExpertisesCriterions(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetListExpertiseReport", ReplyAction="http://tempuri.org/IService1/GetListExpertiseReportResponse")]
        test.ServiceReference1.view_completed_expertise GetListExpertiseReport(int id_expertise);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/GetListExpertiseReport", ReplyAction="http://tempuri.org/IService1/GetListExpertiseReportResponse")]
        System.IAsyncResult BeginGetListExpertiseReport(int id_expertise, System.AsyncCallback callback, object asyncState);
        
        test.ServiceReference1.view_completed_expertise EndGetListExpertiseReport(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetListExpertiseReportPospelov", ReplyAction="http://tempuri.org/IService1/GetListExpertiseReportPospelovResponse")]
        test.ServiceReference1.view_completed_expertise_pospelov GetListExpertiseReportPospelov(int id_expertise);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/GetListExpertiseReportPospelov", ReplyAction="http://tempuri.org/IService1/GetListExpertiseReportPospelovResponse")]
        System.IAsyncResult BeginGetListExpertiseReportPospelov(int id_expertise, System.AsyncCallback callback, object asyncState);
        
        test.ServiceReference1.view_completed_expertise_pospelov EndGetListExpertiseReportPospelov(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetListExpertisePospelov", ReplyAction="http://tempuri.org/IService1/GetListExpertisePospelovResponse")]
        test.ServiceReference1.view_expertise_pospelov GetListExpertisePospelov(int id_expertise, int id_expert);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/GetListExpertisePospelov", ReplyAction="http://tempuri.org/IService1/GetListExpertisePospelovResponse")]
        System.IAsyncResult BeginGetListExpertisePospelov(int id_expertise, int id_expert, System.AsyncCallback callback, object asyncState);
        
        test.ServiceReference1.view_expertise_pospelov EndGetListExpertisePospelov(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetIdExpert", ReplyAction="http://tempuri.org/IService1/GetIdExpertResponse")]
        test.ServiceReference1.experts GetIdExpert(string login, string password);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/GetIdExpert", ReplyAction="http://tempuri.org/IService1/GetIdExpertResponse")]
        System.IAsyncResult BeginGetIdExpert(string login, string password, System.AsyncCallback callback, object asyncState);
        
        test.ServiceReference1.experts EndGetIdExpert(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddExperisePattern", ReplyAction="http://tempuri.org/IService1/AddExperisePatternResponse")]
        int AddExperisePattern(string name, System.Collections.Generic.List<int> ls_id_projects, System.Collections.Generic.List<int> ls_id_experts, System.Collections.Generic.Dictionary<int, float> dc_weight_criteries);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/AddExperisePattern", ReplyAction="http://tempuri.org/IService1/AddExperisePatternResponse")]
        System.IAsyncResult BeginAddExperisePattern(string name, System.Collections.Generic.List<int> ls_id_projects, System.Collections.Generic.List<int> ls_id_experts, System.Collections.Generic.Dictionary<int, float> dc_weight_criteries, System.AsyncCallback callback, object asyncState);
        
        int EndAddExperisePattern(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddExperisePospelov", ReplyAction="http://tempuri.org/IService1/AddExperisePospelovResponse")]
        int AddExperisePospelov(string name, System.Collections.Generic.List<int> ls_id_experts, System.Collections.Generic.List<System.Collections.Generic.List<string>> ls_fac);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/AddExperisePospelov", ReplyAction="http://tempuri.org/IService1/AddExperisePospelovResponse")]
        System.IAsyncResult BeginAddExperisePospelov(string name, System.Collections.Generic.List<int> ls_id_experts, System.Collections.Generic.List<System.Collections.Generic.List<string>> ls_fac, System.AsyncCallback callback, object asyncState);
        
        int EndAddExperisePospelov(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddExpert", ReplyAction="http://tempuri.org/IService1/AddExpertResponse")]
        int AddExpert(string first_name, string second_name, string patronymic, string login, string password, int accses);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/AddExpert", ReplyAction="http://tempuri.org/IService1/AddExpertResponse")]
        System.IAsyncResult BeginAddExpert(string first_name, string second_name, string patronymic, string login, string password, int accses, System.AsyncCallback callback, object asyncState);
        
        int EndAddExpert(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddCriterion", ReplyAction="http://tempuri.org/IService1/AddCriterionResponse")]
        int AddCriterion(string name);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/AddCriterion", ReplyAction="http://tempuri.org/IService1/AddCriterionResponse")]
        System.IAsyncResult BeginAddCriterion(string name, System.AsyncCallback callback, object asyncState);
        
        int EndAddCriterion(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddProject", ReplyAction="http://tempuri.org/IService1/AddProjectResponse")]
        int AddProject(string name);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/AddProject", ReplyAction="http://tempuri.org/IService1/AddProjectResponse")]
        System.IAsyncResult BeginAddProject(string name, System.AsyncCallback callback, object asyncState);
        
        int EndAddProject(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddMark", ReplyAction="http://tempuri.org/IService1/AddMarkResponse")]
        int AddMark(int id_expertise, int id_expert, int id_project, int id_criterion, double value);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/AddMark", ReplyAction="http://tempuri.org/IService1/AddMarkResponse")]
        System.IAsyncResult BeginAddMark(int id_expertise, int id_expert, int id_project, int id_criterion, double value, System.AsyncCallback callback, object asyncState);
        
        int EndAddMark(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddResultExpert", ReplyAction="http://tempuri.org/IService1/AddResultExpertResponse")]
        int AddResultExpert(int id_expertise, int id_expert, int id_project, double value);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/AddResultExpert", ReplyAction="http://tempuri.org/IService1/AddResultExpertResponse")]
        System.IAsyncResult BeginAddResultExpert(int id_expertise, int id_expert, int id_project, double value, System.AsyncCallback callback, object asyncState);
        
        int EndAddResultExpert(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddStatusExpertiseExpert", ReplyAction="http://tempuri.org/IService1/AddStatusExpertiseExpertResponse")]
        int AddStatusExpertiseExpert(int id_expertise, int id_expert);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/AddStatusExpertiseExpert", ReplyAction="http://tempuri.org/IService1/AddStatusExpertiseExpertResponse")]
        System.IAsyncResult BeginAddStatusExpertiseExpert(int id_expertise, int id_expert, System.AsyncCallback callback, object asyncState);
        
        int EndAddStatusExpertiseExpert(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddStatusExpertise", ReplyAction="http://tempuri.org/IService1/AddStatusExpertiseResponse")]
        int AddStatusExpertise(int id_expertise);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/AddStatusExpertise", ReplyAction="http://tempuri.org/IService1/AddStatusExpertiseResponse")]
        System.IAsyncResult BeginAddStatusExpertise(int id_expertise, System.AsyncCallback callback, object asyncState);
        
        int EndAddStatusExpertise(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddMarkPospelov", ReplyAction="http://tempuri.org/IService1/AddMarkPospelovResponse")]
        int AddMarkPospelov(int id_expertise, int id_expert, System.Collections.Generic.Dictionary<int, float> dic_ribs_val, System.Collections.Generic.Dictionary<int, float> dic_facs_val);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/AddMarkPospelov", ReplyAction="http://tempuri.org/IService1/AddMarkPospelovResponse")]
        System.IAsyncResult BeginAddMarkPospelov(int id_expertise, int id_expert, System.Collections.Generic.Dictionary<int, float> dic_ribs_val, System.Collections.Generic.Dictionary<int, float> dic_facs_val, System.AsyncCallback callback, object asyncState);
        
        int EndAddMarkPospelov(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddResultMarkPospelov", ReplyAction="http://tempuri.org/IService1/AddResultMarkPospelovResponse")]
        int AddResultMarkPospelov(int id_expertise);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/AddResultMarkPospelov", ReplyAction="http://tempuri.org/IService1/AddResultMarkPospelovResponse")]
        System.IAsyncResult BeginAddResultMarkPospelov(int id_expertise, System.AsyncCallback callback, object asyncState);
        
        int EndAddResultMarkPospelov(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/EditCriterion", ReplyAction="http://tempuri.org/IService1/EditCriterionResponse")]
        int EditCriterion(int id_criterion, string name);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/EditCriterion", ReplyAction="http://tempuri.org/IService1/EditCriterionResponse")]
        System.IAsyncResult BeginEditCriterion(int id_criterion, string name, System.AsyncCallback callback, object asyncState);
        
        int EndEditCriterion(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/EditExpert", ReplyAction="http://tempuri.org/IService1/EditExpertResponse")]
        int EditExpert(int id_expert, string first_name, string second_name, string patronymic, string login, string password, int accses);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/EditExpert", ReplyAction="http://tempuri.org/IService1/EditExpertResponse")]
        System.IAsyncResult BeginEditExpert(int id_expert, string first_name, string second_name, string patronymic, string login, string password, int accses, System.AsyncCallback callback, object asyncState);
        
        int EndEditExpert(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/EditProject", ReplyAction="http://tempuri.org/IService1/EditProjectResponse")]
        int EditProject(int id_project, string name);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/EditProject", ReplyAction="http://tempuri.org/IService1/EditProjectResponse")]
        System.IAsyncResult BeginEditProject(int id_project, string name, System.AsyncCallback callback, object asyncState);
        
        int EndEditProject(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : test.ServiceReference1.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetListExpertsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetListExpertsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<test.ServiceReference1.experts> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<test.ServiceReference1.experts>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetListCriterionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetListCriterionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<test.ServiceReference1.criterions> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<test.ServiceReference1.criterions>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetListProjectsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetListProjectsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<test.ServiceReference1.projects> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<test.ServiceReference1.projects>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetListCurrentExpertisesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetListCurrentExpertisesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<test.ServiceReference1.expertises> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<test.ServiceReference1.expertises>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetListCompletedExpertisesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetListCompletedExpertisesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<test.ServiceReference1.expertises> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<test.ServiceReference1.expertises>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetListExpertisesCriterionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetListExpertisesCriterionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public test.ServiceReference1.view_expertise_criterios Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((test.ServiceReference1.view_expertise_criterios)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetListExpertiseReportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetListExpertiseReportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public test.ServiceReference1.view_completed_expertise Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((test.ServiceReference1.view_completed_expertise)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetListExpertiseReportPospelovCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetListExpertiseReportPospelovCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public test.ServiceReference1.view_completed_expertise_pospelov Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((test.ServiceReference1.view_completed_expertise_pospelov)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetListExpertisePospelovCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetListExpertisePospelovCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public test.ServiceReference1.view_expertise_pospelov Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((test.ServiceReference1.view_expertise_pospelov)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetIdExpertCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetIdExpertCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public test.ServiceReference1.experts Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((test.ServiceReference1.experts)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AddExperisePatternCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public AddExperisePatternCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AddExperisePospelovCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public AddExperisePospelovCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AddExpertCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public AddExpertCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AddCriterionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public AddCriterionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AddProjectCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public AddProjectCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AddMarkCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public AddMarkCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AddResultExpertCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public AddResultExpertCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AddStatusExpertiseExpertCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public AddStatusExpertiseExpertCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AddStatusExpertiseCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public AddStatusExpertiseCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AddMarkPospelovCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public AddMarkPospelovCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AddResultMarkPospelovCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public AddResultMarkPospelovCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class EditCriterionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public EditCriterionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class EditExpertCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public EditExpertCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class EditProjectCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public EditProjectCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<test.ServiceReference1.IService1>, test.ServiceReference1.IService1 {
        
        private BeginOperationDelegate onBeginGetListExpertsDelegate;
        
        private EndOperationDelegate onEndGetListExpertsDelegate;
        
        private System.Threading.SendOrPostCallback onGetListExpertsCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetListCriterionsDelegate;
        
        private EndOperationDelegate onEndGetListCriterionsDelegate;
        
        private System.Threading.SendOrPostCallback onGetListCriterionsCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetListProjectsDelegate;
        
        private EndOperationDelegate onEndGetListProjectsDelegate;
        
        private System.Threading.SendOrPostCallback onGetListProjectsCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetListCurrentExpertisesDelegate;
        
        private EndOperationDelegate onEndGetListCurrentExpertisesDelegate;
        
        private System.Threading.SendOrPostCallback onGetListCurrentExpertisesCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetListCompletedExpertisesDelegate;
        
        private EndOperationDelegate onEndGetListCompletedExpertisesDelegate;
        
        private System.Threading.SendOrPostCallback onGetListCompletedExpertisesCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetListExpertisesCriterionsDelegate;
        
        private EndOperationDelegate onEndGetListExpertisesCriterionsDelegate;
        
        private System.Threading.SendOrPostCallback onGetListExpertisesCriterionsCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetListExpertiseReportDelegate;
        
        private EndOperationDelegate onEndGetListExpertiseReportDelegate;
        
        private System.Threading.SendOrPostCallback onGetListExpertiseReportCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetListExpertiseReportPospelovDelegate;
        
        private EndOperationDelegate onEndGetListExpertiseReportPospelovDelegate;
        
        private System.Threading.SendOrPostCallback onGetListExpertiseReportPospelovCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetListExpertisePospelovDelegate;
        
        private EndOperationDelegate onEndGetListExpertisePospelovDelegate;
        
        private System.Threading.SendOrPostCallback onGetListExpertisePospelovCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetIdExpertDelegate;
        
        private EndOperationDelegate onEndGetIdExpertDelegate;
        
        private System.Threading.SendOrPostCallback onGetIdExpertCompletedDelegate;
        
        private BeginOperationDelegate onBeginAddExperisePatternDelegate;
        
        private EndOperationDelegate onEndAddExperisePatternDelegate;
        
        private System.Threading.SendOrPostCallback onAddExperisePatternCompletedDelegate;
        
        private BeginOperationDelegate onBeginAddExperisePospelovDelegate;
        
        private EndOperationDelegate onEndAddExperisePospelovDelegate;
        
        private System.Threading.SendOrPostCallback onAddExperisePospelovCompletedDelegate;
        
        private BeginOperationDelegate onBeginAddExpertDelegate;
        
        private EndOperationDelegate onEndAddExpertDelegate;
        
        private System.Threading.SendOrPostCallback onAddExpertCompletedDelegate;
        
        private BeginOperationDelegate onBeginAddCriterionDelegate;
        
        private EndOperationDelegate onEndAddCriterionDelegate;
        
        private System.Threading.SendOrPostCallback onAddCriterionCompletedDelegate;
        
        private BeginOperationDelegate onBeginAddProjectDelegate;
        
        private EndOperationDelegate onEndAddProjectDelegate;
        
        private System.Threading.SendOrPostCallback onAddProjectCompletedDelegate;
        
        private BeginOperationDelegate onBeginAddMarkDelegate;
        
        private EndOperationDelegate onEndAddMarkDelegate;
        
        private System.Threading.SendOrPostCallback onAddMarkCompletedDelegate;
        
        private BeginOperationDelegate onBeginAddResultExpertDelegate;
        
        private EndOperationDelegate onEndAddResultExpertDelegate;
        
        private System.Threading.SendOrPostCallback onAddResultExpertCompletedDelegate;
        
        private BeginOperationDelegate onBeginAddStatusExpertiseExpertDelegate;
        
        private EndOperationDelegate onEndAddStatusExpertiseExpertDelegate;
        
        private System.Threading.SendOrPostCallback onAddStatusExpertiseExpertCompletedDelegate;
        
        private BeginOperationDelegate onBeginAddStatusExpertiseDelegate;
        
        private EndOperationDelegate onEndAddStatusExpertiseDelegate;
        
        private System.Threading.SendOrPostCallback onAddStatusExpertiseCompletedDelegate;
        
        private BeginOperationDelegate onBeginAddMarkPospelovDelegate;
        
        private EndOperationDelegate onEndAddMarkPospelovDelegate;
        
        private System.Threading.SendOrPostCallback onAddMarkPospelovCompletedDelegate;
        
        private BeginOperationDelegate onBeginAddResultMarkPospelovDelegate;
        
        private EndOperationDelegate onEndAddResultMarkPospelovDelegate;
        
        private System.Threading.SendOrPostCallback onAddResultMarkPospelovCompletedDelegate;
        
        private BeginOperationDelegate onBeginEditCriterionDelegate;
        
        private EndOperationDelegate onEndEditCriterionDelegate;
        
        private System.Threading.SendOrPostCallback onEditCriterionCompletedDelegate;
        
        private BeginOperationDelegate onBeginEditExpertDelegate;
        
        private EndOperationDelegate onEndEditExpertDelegate;
        
        private System.Threading.SendOrPostCallback onEditExpertCompletedDelegate;
        
        private BeginOperationDelegate onBeginEditProjectDelegate;
        
        private EndOperationDelegate onEndEditProjectDelegate;
        
        private System.Threading.SendOrPostCallback onEditProjectCompletedDelegate;
        
        public Service1Client() {
        }
        
        public Service1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public event System.EventHandler<GetListExpertsCompletedEventArgs> GetListExpertsCompleted;
        
        public event System.EventHandler<GetListCriterionsCompletedEventArgs> GetListCriterionsCompleted;
        
        public event System.EventHandler<GetListProjectsCompletedEventArgs> GetListProjectsCompleted;
        
        public event System.EventHandler<GetListCurrentExpertisesCompletedEventArgs> GetListCurrentExpertisesCompleted;
        
        public event System.EventHandler<GetListCompletedExpertisesCompletedEventArgs> GetListCompletedExpertisesCompleted;
        
        public event System.EventHandler<GetListExpertisesCriterionsCompletedEventArgs> GetListExpertisesCriterionsCompleted;
        
        public event System.EventHandler<GetListExpertiseReportCompletedEventArgs> GetListExpertiseReportCompleted;
        
        public event System.EventHandler<GetListExpertiseReportPospelovCompletedEventArgs> GetListExpertiseReportPospelovCompleted;
        
        public event System.EventHandler<GetListExpertisePospelovCompletedEventArgs> GetListExpertisePospelovCompleted;
        
        public event System.EventHandler<GetIdExpertCompletedEventArgs> GetIdExpertCompleted;
        
        public event System.EventHandler<AddExperisePatternCompletedEventArgs> AddExperisePatternCompleted;
        
        public event System.EventHandler<AddExperisePospelovCompletedEventArgs> AddExperisePospelovCompleted;
        
        public event System.EventHandler<AddExpertCompletedEventArgs> AddExpertCompleted;
        
        public event System.EventHandler<AddCriterionCompletedEventArgs> AddCriterionCompleted;
        
        public event System.EventHandler<AddProjectCompletedEventArgs> AddProjectCompleted;
        
        public event System.EventHandler<AddMarkCompletedEventArgs> AddMarkCompleted;
        
        public event System.EventHandler<AddResultExpertCompletedEventArgs> AddResultExpertCompleted;
        
        public event System.EventHandler<AddStatusExpertiseExpertCompletedEventArgs> AddStatusExpertiseExpertCompleted;
        
        public event System.EventHandler<AddStatusExpertiseCompletedEventArgs> AddStatusExpertiseCompleted;
        
        public event System.EventHandler<AddMarkPospelovCompletedEventArgs> AddMarkPospelovCompleted;
        
        public event System.EventHandler<AddResultMarkPospelovCompletedEventArgs> AddResultMarkPospelovCompleted;
        
        public event System.EventHandler<EditCriterionCompletedEventArgs> EditCriterionCompleted;
        
        public event System.EventHandler<EditExpertCompletedEventArgs> EditExpertCompleted;
        
        public event System.EventHandler<EditProjectCompletedEventArgs> EditProjectCompleted;
        
        public System.Collections.Generic.List<test.ServiceReference1.experts> GetListExperts() {
            return base.Channel.GetListExperts();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetListExperts(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetListExperts(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.Generic.List<test.ServiceReference1.experts> EndGetListExperts(System.IAsyncResult result) {
            return base.Channel.EndGetListExperts(result);
        }
        
        private System.IAsyncResult OnBeginGetListExperts(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetListExperts(callback, asyncState);
        }
        
        private object[] OnEndGetListExperts(System.IAsyncResult result) {
            System.Collections.Generic.List<test.ServiceReference1.experts> retVal = this.EndGetListExperts(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetListExpertsCompleted(object state) {
            if ((this.GetListExpertsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetListExpertsCompleted(this, new GetListExpertsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetListExpertsAsync() {
            this.GetListExpertsAsync(null);
        }
        
        public void GetListExpertsAsync(object userState) {
            if ((this.onBeginGetListExpertsDelegate == null)) {
                this.onBeginGetListExpertsDelegate = new BeginOperationDelegate(this.OnBeginGetListExperts);
            }
            if ((this.onEndGetListExpertsDelegate == null)) {
                this.onEndGetListExpertsDelegate = new EndOperationDelegate(this.OnEndGetListExperts);
            }
            if ((this.onGetListExpertsCompletedDelegate == null)) {
                this.onGetListExpertsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetListExpertsCompleted);
            }
            base.InvokeAsync(this.onBeginGetListExpertsDelegate, null, this.onEndGetListExpertsDelegate, this.onGetListExpertsCompletedDelegate, userState);
        }
        
        public System.Collections.Generic.List<test.ServiceReference1.criterions> GetListCriterions() {
            return base.Channel.GetListCriterions();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetListCriterions(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetListCriterions(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.Generic.List<test.ServiceReference1.criterions> EndGetListCriterions(System.IAsyncResult result) {
            return base.Channel.EndGetListCriterions(result);
        }
        
        private System.IAsyncResult OnBeginGetListCriterions(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetListCriterions(callback, asyncState);
        }
        
        private object[] OnEndGetListCriterions(System.IAsyncResult result) {
            System.Collections.Generic.List<test.ServiceReference1.criterions> retVal = this.EndGetListCriterions(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetListCriterionsCompleted(object state) {
            if ((this.GetListCriterionsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetListCriterionsCompleted(this, new GetListCriterionsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetListCriterionsAsync() {
            this.GetListCriterionsAsync(null);
        }
        
        public void GetListCriterionsAsync(object userState) {
            if ((this.onBeginGetListCriterionsDelegate == null)) {
                this.onBeginGetListCriterionsDelegate = new BeginOperationDelegate(this.OnBeginGetListCriterions);
            }
            if ((this.onEndGetListCriterionsDelegate == null)) {
                this.onEndGetListCriterionsDelegate = new EndOperationDelegate(this.OnEndGetListCriterions);
            }
            if ((this.onGetListCriterionsCompletedDelegate == null)) {
                this.onGetListCriterionsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetListCriterionsCompleted);
            }
            base.InvokeAsync(this.onBeginGetListCriterionsDelegate, null, this.onEndGetListCriterionsDelegate, this.onGetListCriterionsCompletedDelegate, userState);
        }
        
        public System.Collections.Generic.List<test.ServiceReference1.projects> GetListProjects() {
            return base.Channel.GetListProjects();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetListProjects(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetListProjects(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.Generic.List<test.ServiceReference1.projects> EndGetListProjects(System.IAsyncResult result) {
            return base.Channel.EndGetListProjects(result);
        }
        
        private System.IAsyncResult OnBeginGetListProjects(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetListProjects(callback, asyncState);
        }
        
        private object[] OnEndGetListProjects(System.IAsyncResult result) {
            System.Collections.Generic.List<test.ServiceReference1.projects> retVal = this.EndGetListProjects(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetListProjectsCompleted(object state) {
            if ((this.GetListProjectsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetListProjectsCompleted(this, new GetListProjectsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetListProjectsAsync() {
            this.GetListProjectsAsync(null);
        }
        
        public void GetListProjectsAsync(object userState) {
            if ((this.onBeginGetListProjectsDelegate == null)) {
                this.onBeginGetListProjectsDelegate = new BeginOperationDelegate(this.OnBeginGetListProjects);
            }
            if ((this.onEndGetListProjectsDelegate == null)) {
                this.onEndGetListProjectsDelegate = new EndOperationDelegate(this.OnEndGetListProjects);
            }
            if ((this.onGetListProjectsCompletedDelegate == null)) {
                this.onGetListProjectsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetListProjectsCompleted);
            }
            base.InvokeAsync(this.onBeginGetListProjectsDelegate, null, this.onEndGetListProjectsDelegate, this.onGetListProjectsCompletedDelegate, userState);
        }
        
        public System.Collections.Generic.List<test.ServiceReference1.expertises> GetListCurrentExpertises(int id_expert) {
            return base.Channel.GetListCurrentExpertises(id_expert);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetListCurrentExpertises(int id_expert, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetListCurrentExpertises(id_expert, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.Generic.List<test.ServiceReference1.expertises> EndGetListCurrentExpertises(System.IAsyncResult result) {
            return base.Channel.EndGetListCurrentExpertises(result);
        }
        
        private System.IAsyncResult OnBeginGetListCurrentExpertises(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int id_expert = ((int)(inValues[0]));
            return this.BeginGetListCurrentExpertises(id_expert, callback, asyncState);
        }
        
        private object[] OnEndGetListCurrentExpertises(System.IAsyncResult result) {
            System.Collections.Generic.List<test.ServiceReference1.expertises> retVal = this.EndGetListCurrentExpertises(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetListCurrentExpertisesCompleted(object state) {
            if ((this.GetListCurrentExpertisesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetListCurrentExpertisesCompleted(this, new GetListCurrentExpertisesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetListCurrentExpertisesAsync(int id_expert) {
            this.GetListCurrentExpertisesAsync(id_expert, null);
        }
        
        public void GetListCurrentExpertisesAsync(int id_expert, object userState) {
            if ((this.onBeginGetListCurrentExpertisesDelegate == null)) {
                this.onBeginGetListCurrentExpertisesDelegate = new BeginOperationDelegate(this.OnBeginGetListCurrentExpertises);
            }
            if ((this.onEndGetListCurrentExpertisesDelegate == null)) {
                this.onEndGetListCurrentExpertisesDelegate = new EndOperationDelegate(this.OnEndGetListCurrentExpertises);
            }
            if ((this.onGetListCurrentExpertisesCompletedDelegate == null)) {
                this.onGetListCurrentExpertisesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetListCurrentExpertisesCompleted);
            }
            base.InvokeAsync(this.onBeginGetListCurrentExpertisesDelegate, new object[] {
                        id_expert}, this.onEndGetListCurrentExpertisesDelegate, this.onGetListCurrentExpertisesCompletedDelegate, userState);
        }
        
        public System.Collections.Generic.List<test.ServiceReference1.expertises> GetListCompletedExpertises() {
            return base.Channel.GetListCompletedExpertises();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetListCompletedExpertises(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetListCompletedExpertises(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.Generic.List<test.ServiceReference1.expertises> EndGetListCompletedExpertises(System.IAsyncResult result) {
            return base.Channel.EndGetListCompletedExpertises(result);
        }
        
        private System.IAsyncResult OnBeginGetListCompletedExpertises(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetListCompletedExpertises(callback, asyncState);
        }
        
        private object[] OnEndGetListCompletedExpertises(System.IAsyncResult result) {
            System.Collections.Generic.List<test.ServiceReference1.expertises> retVal = this.EndGetListCompletedExpertises(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetListCompletedExpertisesCompleted(object state) {
            if ((this.GetListCompletedExpertisesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetListCompletedExpertisesCompleted(this, new GetListCompletedExpertisesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetListCompletedExpertisesAsync() {
            this.GetListCompletedExpertisesAsync(null);
        }
        
        public void GetListCompletedExpertisesAsync(object userState) {
            if ((this.onBeginGetListCompletedExpertisesDelegate == null)) {
                this.onBeginGetListCompletedExpertisesDelegate = new BeginOperationDelegate(this.OnBeginGetListCompletedExpertises);
            }
            if ((this.onEndGetListCompletedExpertisesDelegate == null)) {
                this.onEndGetListCompletedExpertisesDelegate = new EndOperationDelegate(this.OnEndGetListCompletedExpertises);
            }
            if ((this.onGetListCompletedExpertisesCompletedDelegate == null)) {
                this.onGetListCompletedExpertisesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetListCompletedExpertisesCompleted);
            }
            base.InvokeAsync(this.onBeginGetListCompletedExpertisesDelegate, null, this.onEndGetListCompletedExpertisesDelegate, this.onGetListCompletedExpertisesCompletedDelegate, userState);
        }
        
        public test.ServiceReference1.view_expertise_criterios GetListExpertisesCriterions(int id_expertise, int id_expert) {
            return base.Channel.GetListExpertisesCriterions(id_expertise, id_expert);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetListExpertisesCriterions(int id_expertise, int id_expert, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetListExpertisesCriterions(id_expertise, id_expert, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public test.ServiceReference1.view_expertise_criterios EndGetListExpertisesCriterions(System.IAsyncResult result) {
            return base.Channel.EndGetListExpertisesCriterions(result);
        }
        
        private System.IAsyncResult OnBeginGetListExpertisesCriterions(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int id_expertise = ((int)(inValues[0]));
            int id_expert = ((int)(inValues[1]));
            return this.BeginGetListExpertisesCriterions(id_expertise, id_expert, callback, asyncState);
        }
        
        private object[] OnEndGetListExpertisesCriterions(System.IAsyncResult result) {
            test.ServiceReference1.view_expertise_criterios retVal = this.EndGetListExpertisesCriterions(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetListExpertisesCriterionsCompleted(object state) {
            if ((this.GetListExpertisesCriterionsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetListExpertisesCriterionsCompleted(this, new GetListExpertisesCriterionsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetListExpertisesCriterionsAsync(int id_expertise, int id_expert) {
            this.GetListExpertisesCriterionsAsync(id_expertise, id_expert, null);
        }
        
        public void GetListExpertisesCriterionsAsync(int id_expertise, int id_expert, object userState) {
            if ((this.onBeginGetListExpertisesCriterionsDelegate == null)) {
                this.onBeginGetListExpertisesCriterionsDelegate = new BeginOperationDelegate(this.OnBeginGetListExpertisesCriterions);
            }
            if ((this.onEndGetListExpertisesCriterionsDelegate == null)) {
                this.onEndGetListExpertisesCriterionsDelegate = new EndOperationDelegate(this.OnEndGetListExpertisesCriterions);
            }
            if ((this.onGetListExpertisesCriterionsCompletedDelegate == null)) {
                this.onGetListExpertisesCriterionsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetListExpertisesCriterionsCompleted);
            }
            base.InvokeAsync(this.onBeginGetListExpertisesCriterionsDelegate, new object[] {
                        id_expertise,
                        id_expert}, this.onEndGetListExpertisesCriterionsDelegate, this.onGetListExpertisesCriterionsCompletedDelegate, userState);
        }
        
        public test.ServiceReference1.view_completed_expertise GetListExpertiseReport(int id_expertise) {
            return base.Channel.GetListExpertiseReport(id_expertise);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetListExpertiseReport(int id_expertise, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetListExpertiseReport(id_expertise, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public test.ServiceReference1.view_completed_expertise EndGetListExpertiseReport(System.IAsyncResult result) {
            return base.Channel.EndGetListExpertiseReport(result);
        }
        
        private System.IAsyncResult OnBeginGetListExpertiseReport(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int id_expertise = ((int)(inValues[0]));
            return this.BeginGetListExpertiseReport(id_expertise, callback, asyncState);
        }
        
        private object[] OnEndGetListExpertiseReport(System.IAsyncResult result) {
            test.ServiceReference1.view_completed_expertise retVal = this.EndGetListExpertiseReport(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetListExpertiseReportCompleted(object state) {
            if ((this.GetListExpertiseReportCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetListExpertiseReportCompleted(this, new GetListExpertiseReportCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetListExpertiseReportAsync(int id_expertise) {
            this.GetListExpertiseReportAsync(id_expertise, null);
        }
        
        public void GetListExpertiseReportAsync(int id_expertise, object userState) {
            if ((this.onBeginGetListExpertiseReportDelegate == null)) {
                this.onBeginGetListExpertiseReportDelegate = new BeginOperationDelegate(this.OnBeginGetListExpertiseReport);
            }
            if ((this.onEndGetListExpertiseReportDelegate == null)) {
                this.onEndGetListExpertiseReportDelegate = new EndOperationDelegate(this.OnEndGetListExpertiseReport);
            }
            if ((this.onGetListExpertiseReportCompletedDelegate == null)) {
                this.onGetListExpertiseReportCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetListExpertiseReportCompleted);
            }
            base.InvokeAsync(this.onBeginGetListExpertiseReportDelegate, new object[] {
                        id_expertise}, this.onEndGetListExpertiseReportDelegate, this.onGetListExpertiseReportCompletedDelegate, userState);
        }
        
        public test.ServiceReference1.view_completed_expertise_pospelov GetListExpertiseReportPospelov(int id_expertise) {
            return base.Channel.GetListExpertiseReportPospelov(id_expertise);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetListExpertiseReportPospelov(int id_expertise, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetListExpertiseReportPospelov(id_expertise, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public test.ServiceReference1.view_completed_expertise_pospelov EndGetListExpertiseReportPospelov(System.IAsyncResult result) {
            return base.Channel.EndGetListExpertiseReportPospelov(result);
        }
        
        private System.IAsyncResult OnBeginGetListExpertiseReportPospelov(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int id_expertise = ((int)(inValues[0]));
            return this.BeginGetListExpertiseReportPospelov(id_expertise, callback, asyncState);
        }
        
        private object[] OnEndGetListExpertiseReportPospelov(System.IAsyncResult result) {
            test.ServiceReference1.view_completed_expertise_pospelov retVal = this.EndGetListExpertiseReportPospelov(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetListExpertiseReportPospelovCompleted(object state) {
            if ((this.GetListExpertiseReportPospelovCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetListExpertiseReportPospelovCompleted(this, new GetListExpertiseReportPospelovCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetListExpertiseReportPospelovAsync(int id_expertise) {
            this.GetListExpertiseReportPospelovAsync(id_expertise, null);
        }
        
        public void GetListExpertiseReportPospelovAsync(int id_expertise, object userState) {
            if ((this.onBeginGetListExpertiseReportPospelovDelegate == null)) {
                this.onBeginGetListExpertiseReportPospelovDelegate = new BeginOperationDelegate(this.OnBeginGetListExpertiseReportPospelov);
            }
            if ((this.onEndGetListExpertiseReportPospelovDelegate == null)) {
                this.onEndGetListExpertiseReportPospelovDelegate = new EndOperationDelegate(this.OnEndGetListExpertiseReportPospelov);
            }
            if ((this.onGetListExpertiseReportPospelovCompletedDelegate == null)) {
                this.onGetListExpertiseReportPospelovCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetListExpertiseReportPospelovCompleted);
            }
            base.InvokeAsync(this.onBeginGetListExpertiseReportPospelovDelegate, new object[] {
                        id_expertise}, this.onEndGetListExpertiseReportPospelovDelegate, this.onGetListExpertiseReportPospelovCompletedDelegate, userState);
        }
        
        public test.ServiceReference1.view_expertise_pospelov GetListExpertisePospelov(int id_expertise, int id_expert) {
            return base.Channel.GetListExpertisePospelov(id_expertise, id_expert);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetListExpertisePospelov(int id_expertise, int id_expert, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetListExpertisePospelov(id_expertise, id_expert, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public test.ServiceReference1.view_expertise_pospelov EndGetListExpertisePospelov(System.IAsyncResult result) {
            return base.Channel.EndGetListExpertisePospelov(result);
        }
        
        private System.IAsyncResult OnBeginGetListExpertisePospelov(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int id_expertise = ((int)(inValues[0]));
            int id_expert = ((int)(inValues[1]));
            return this.BeginGetListExpertisePospelov(id_expertise, id_expert, callback, asyncState);
        }
        
        private object[] OnEndGetListExpertisePospelov(System.IAsyncResult result) {
            test.ServiceReference1.view_expertise_pospelov retVal = this.EndGetListExpertisePospelov(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetListExpertisePospelovCompleted(object state) {
            if ((this.GetListExpertisePospelovCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetListExpertisePospelovCompleted(this, new GetListExpertisePospelovCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetListExpertisePospelovAsync(int id_expertise, int id_expert) {
            this.GetListExpertisePospelovAsync(id_expertise, id_expert, null);
        }
        
        public void GetListExpertisePospelovAsync(int id_expertise, int id_expert, object userState) {
            if ((this.onBeginGetListExpertisePospelovDelegate == null)) {
                this.onBeginGetListExpertisePospelovDelegate = new BeginOperationDelegate(this.OnBeginGetListExpertisePospelov);
            }
            if ((this.onEndGetListExpertisePospelovDelegate == null)) {
                this.onEndGetListExpertisePospelovDelegate = new EndOperationDelegate(this.OnEndGetListExpertisePospelov);
            }
            if ((this.onGetListExpertisePospelovCompletedDelegate == null)) {
                this.onGetListExpertisePospelovCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetListExpertisePospelovCompleted);
            }
            base.InvokeAsync(this.onBeginGetListExpertisePospelovDelegate, new object[] {
                        id_expertise,
                        id_expert}, this.onEndGetListExpertisePospelovDelegate, this.onGetListExpertisePospelovCompletedDelegate, userState);
        }
        
        public test.ServiceReference1.experts GetIdExpert(string login, string password) {
            return base.Channel.GetIdExpert(login, password);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetIdExpert(string login, string password, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetIdExpert(login, password, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public test.ServiceReference1.experts EndGetIdExpert(System.IAsyncResult result) {
            return base.Channel.EndGetIdExpert(result);
        }
        
        private System.IAsyncResult OnBeginGetIdExpert(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string login = ((string)(inValues[0]));
            string password = ((string)(inValues[1]));
            return this.BeginGetIdExpert(login, password, callback, asyncState);
        }
        
        private object[] OnEndGetIdExpert(System.IAsyncResult result) {
            test.ServiceReference1.experts retVal = this.EndGetIdExpert(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetIdExpertCompleted(object state) {
            if ((this.GetIdExpertCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetIdExpertCompleted(this, new GetIdExpertCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetIdExpertAsync(string login, string password) {
            this.GetIdExpertAsync(login, password, null);
        }
        
        public void GetIdExpertAsync(string login, string password, object userState) {
            if ((this.onBeginGetIdExpertDelegate == null)) {
                this.onBeginGetIdExpertDelegate = new BeginOperationDelegate(this.OnBeginGetIdExpert);
            }
            if ((this.onEndGetIdExpertDelegate == null)) {
                this.onEndGetIdExpertDelegate = new EndOperationDelegate(this.OnEndGetIdExpert);
            }
            if ((this.onGetIdExpertCompletedDelegate == null)) {
                this.onGetIdExpertCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetIdExpertCompleted);
            }
            base.InvokeAsync(this.onBeginGetIdExpertDelegate, new object[] {
                        login,
                        password}, this.onEndGetIdExpertDelegate, this.onGetIdExpertCompletedDelegate, userState);
        }
        
        public int AddExperisePattern(string name, System.Collections.Generic.List<int> ls_id_projects, System.Collections.Generic.List<int> ls_id_experts, System.Collections.Generic.Dictionary<int, float> dc_weight_criteries) {
            return base.Channel.AddExperisePattern(name, ls_id_projects, ls_id_experts, dc_weight_criteries);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginAddExperisePattern(string name, System.Collections.Generic.List<int> ls_id_projects, System.Collections.Generic.List<int> ls_id_experts, System.Collections.Generic.Dictionary<int, float> dc_weight_criteries, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAddExperisePattern(name, ls_id_projects, ls_id_experts, dc_weight_criteries, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public int EndAddExperisePattern(System.IAsyncResult result) {
            return base.Channel.EndAddExperisePattern(result);
        }
        
        private System.IAsyncResult OnBeginAddExperisePattern(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string name = ((string)(inValues[0]));
            System.Collections.Generic.List<int> ls_id_projects = ((System.Collections.Generic.List<int>)(inValues[1]));
            System.Collections.Generic.List<int> ls_id_experts = ((System.Collections.Generic.List<int>)(inValues[2]));
            System.Collections.Generic.Dictionary<int, float> dc_weight_criteries = ((System.Collections.Generic.Dictionary<int, float>)(inValues[3]));
            return this.BeginAddExperisePattern(name, ls_id_projects, ls_id_experts, dc_weight_criteries, callback, asyncState);
        }
        
        private object[] OnEndAddExperisePattern(System.IAsyncResult result) {
            int retVal = this.EndAddExperisePattern(result);
            return new object[] {
                    retVal};
        }
        
        private void OnAddExperisePatternCompleted(object state) {
            if ((this.AddExperisePatternCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AddExperisePatternCompleted(this, new AddExperisePatternCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AddExperisePatternAsync(string name, System.Collections.Generic.List<int> ls_id_projects, System.Collections.Generic.List<int> ls_id_experts, System.Collections.Generic.Dictionary<int, float> dc_weight_criteries) {
            this.AddExperisePatternAsync(name, ls_id_projects, ls_id_experts, dc_weight_criteries, null);
        }
        
        public void AddExperisePatternAsync(string name, System.Collections.Generic.List<int> ls_id_projects, System.Collections.Generic.List<int> ls_id_experts, System.Collections.Generic.Dictionary<int, float> dc_weight_criteries, object userState) {
            if ((this.onBeginAddExperisePatternDelegate == null)) {
                this.onBeginAddExperisePatternDelegate = new BeginOperationDelegate(this.OnBeginAddExperisePattern);
            }
            if ((this.onEndAddExperisePatternDelegate == null)) {
                this.onEndAddExperisePatternDelegate = new EndOperationDelegate(this.OnEndAddExperisePattern);
            }
            if ((this.onAddExperisePatternCompletedDelegate == null)) {
                this.onAddExperisePatternCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAddExperisePatternCompleted);
            }
            base.InvokeAsync(this.onBeginAddExperisePatternDelegate, new object[] {
                        name,
                        ls_id_projects,
                        ls_id_experts,
                        dc_weight_criteries}, this.onEndAddExperisePatternDelegate, this.onAddExperisePatternCompletedDelegate, userState);
        }
        
        public int AddExperisePospelov(string name, System.Collections.Generic.List<int> ls_id_experts, System.Collections.Generic.List<System.Collections.Generic.List<string>> ls_fac) {
            return base.Channel.AddExperisePospelov(name, ls_id_experts, ls_fac);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginAddExperisePospelov(string name, System.Collections.Generic.List<int> ls_id_experts, System.Collections.Generic.List<System.Collections.Generic.List<string>> ls_fac, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAddExperisePospelov(name, ls_id_experts, ls_fac, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public int EndAddExperisePospelov(System.IAsyncResult result) {
            return base.Channel.EndAddExperisePospelov(result);
        }
        
        private System.IAsyncResult OnBeginAddExperisePospelov(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string name = ((string)(inValues[0]));
            System.Collections.Generic.List<int> ls_id_experts = ((System.Collections.Generic.List<int>)(inValues[1]));
            System.Collections.Generic.List<System.Collections.Generic.List<string>> ls_fac = ((System.Collections.Generic.List<System.Collections.Generic.List<string>>)(inValues[2]));
            return this.BeginAddExperisePospelov(name, ls_id_experts, ls_fac, callback, asyncState);
        }
        
        private object[] OnEndAddExperisePospelov(System.IAsyncResult result) {
            int retVal = this.EndAddExperisePospelov(result);
            return new object[] {
                    retVal};
        }
        
        private void OnAddExperisePospelovCompleted(object state) {
            if ((this.AddExperisePospelovCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AddExperisePospelovCompleted(this, new AddExperisePospelovCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AddExperisePospelovAsync(string name, System.Collections.Generic.List<int> ls_id_experts, System.Collections.Generic.List<System.Collections.Generic.List<string>> ls_fac) {
            this.AddExperisePospelovAsync(name, ls_id_experts, ls_fac, null);
        }
        
        public void AddExperisePospelovAsync(string name, System.Collections.Generic.List<int> ls_id_experts, System.Collections.Generic.List<System.Collections.Generic.List<string>> ls_fac, object userState) {
            if ((this.onBeginAddExperisePospelovDelegate == null)) {
                this.onBeginAddExperisePospelovDelegate = new BeginOperationDelegate(this.OnBeginAddExperisePospelov);
            }
            if ((this.onEndAddExperisePospelovDelegate == null)) {
                this.onEndAddExperisePospelovDelegate = new EndOperationDelegate(this.OnEndAddExperisePospelov);
            }
            if ((this.onAddExperisePospelovCompletedDelegate == null)) {
                this.onAddExperisePospelovCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAddExperisePospelovCompleted);
            }
            base.InvokeAsync(this.onBeginAddExperisePospelovDelegate, new object[] {
                        name,
                        ls_id_experts,
                        ls_fac}, this.onEndAddExperisePospelovDelegate, this.onAddExperisePospelovCompletedDelegate, userState);
        }
        
        public int AddExpert(string first_name, string second_name, string patronymic, string login, string password, int accses) {
            return base.Channel.AddExpert(first_name, second_name, patronymic, login, password, accses);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginAddExpert(string first_name, string second_name, string patronymic, string login, string password, int accses, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAddExpert(first_name, second_name, patronymic, login, password, accses, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public int EndAddExpert(System.IAsyncResult result) {
            return base.Channel.EndAddExpert(result);
        }
        
        private System.IAsyncResult OnBeginAddExpert(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string first_name = ((string)(inValues[0]));
            string second_name = ((string)(inValues[1]));
            string patronymic = ((string)(inValues[2]));
            string login = ((string)(inValues[3]));
            string password = ((string)(inValues[4]));
            int accses = ((int)(inValues[5]));
            return this.BeginAddExpert(first_name, second_name, patronymic, login, password, accses, callback, asyncState);
        }
        
        private object[] OnEndAddExpert(System.IAsyncResult result) {
            int retVal = this.EndAddExpert(result);
            return new object[] {
                    retVal};
        }
        
        private void OnAddExpertCompleted(object state) {
            if ((this.AddExpertCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AddExpertCompleted(this, new AddExpertCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AddExpertAsync(string first_name, string second_name, string patronymic, string login, string password, int accses) {
            this.AddExpertAsync(first_name, second_name, patronymic, login, password, accses, null);
        }
        
        public void AddExpertAsync(string first_name, string second_name, string patronymic, string login, string password, int accses, object userState) {
            if ((this.onBeginAddExpertDelegate == null)) {
                this.onBeginAddExpertDelegate = new BeginOperationDelegate(this.OnBeginAddExpert);
            }
            if ((this.onEndAddExpertDelegate == null)) {
                this.onEndAddExpertDelegate = new EndOperationDelegate(this.OnEndAddExpert);
            }
            if ((this.onAddExpertCompletedDelegate == null)) {
                this.onAddExpertCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAddExpertCompleted);
            }
            base.InvokeAsync(this.onBeginAddExpertDelegate, new object[] {
                        first_name,
                        second_name,
                        patronymic,
                        login,
                        password,
                        accses}, this.onEndAddExpertDelegate, this.onAddExpertCompletedDelegate, userState);
        }
        
        public int AddCriterion(string name) {
            return base.Channel.AddCriterion(name);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginAddCriterion(string name, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAddCriterion(name, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public int EndAddCriterion(System.IAsyncResult result) {
            return base.Channel.EndAddCriterion(result);
        }
        
        private System.IAsyncResult OnBeginAddCriterion(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string name = ((string)(inValues[0]));
            return this.BeginAddCriterion(name, callback, asyncState);
        }
        
        private object[] OnEndAddCriterion(System.IAsyncResult result) {
            int retVal = this.EndAddCriterion(result);
            return new object[] {
                    retVal};
        }
        
        private void OnAddCriterionCompleted(object state) {
            if ((this.AddCriterionCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AddCriterionCompleted(this, new AddCriterionCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AddCriterionAsync(string name) {
            this.AddCriterionAsync(name, null);
        }
        
        public void AddCriterionAsync(string name, object userState) {
            if ((this.onBeginAddCriterionDelegate == null)) {
                this.onBeginAddCriterionDelegate = new BeginOperationDelegate(this.OnBeginAddCriterion);
            }
            if ((this.onEndAddCriterionDelegate == null)) {
                this.onEndAddCriterionDelegate = new EndOperationDelegate(this.OnEndAddCriterion);
            }
            if ((this.onAddCriterionCompletedDelegate == null)) {
                this.onAddCriterionCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAddCriterionCompleted);
            }
            base.InvokeAsync(this.onBeginAddCriterionDelegate, new object[] {
                        name}, this.onEndAddCriterionDelegate, this.onAddCriterionCompletedDelegate, userState);
        }
        
        public int AddProject(string name) {
            return base.Channel.AddProject(name);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginAddProject(string name, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAddProject(name, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public int EndAddProject(System.IAsyncResult result) {
            return base.Channel.EndAddProject(result);
        }
        
        private System.IAsyncResult OnBeginAddProject(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string name = ((string)(inValues[0]));
            return this.BeginAddProject(name, callback, asyncState);
        }
        
        private object[] OnEndAddProject(System.IAsyncResult result) {
            int retVal = this.EndAddProject(result);
            return new object[] {
                    retVal};
        }
        
        private void OnAddProjectCompleted(object state) {
            if ((this.AddProjectCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AddProjectCompleted(this, new AddProjectCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AddProjectAsync(string name) {
            this.AddProjectAsync(name, null);
        }
        
        public void AddProjectAsync(string name, object userState) {
            if ((this.onBeginAddProjectDelegate == null)) {
                this.onBeginAddProjectDelegate = new BeginOperationDelegate(this.OnBeginAddProject);
            }
            if ((this.onEndAddProjectDelegate == null)) {
                this.onEndAddProjectDelegate = new EndOperationDelegate(this.OnEndAddProject);
            }
            if ((this.onAddProjectCompletedDelegate == null)) {
                this.onAddProjectCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAddProjectCompleted);
            }
            base.InvokeAsync(this.onBeginAddProjectDelegate, new object[] {
                        name}, this.onEndAddProjectDelegate, this.onAddProjectCompletedDelegate, userState);
        }
        
        public int AddMark(int id_expertise, int id_expert, int id_project, int id_criterion, double value) {
            return base.Channel.AddMark(id_expertise, id_expert, id_project, id_criterion, value);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginAddMark(int id_expertise, int id_expert, int id_project, int id_criterion, double value, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAddMark(id_expertise, id_expert, id_project, id_criterion, value, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public int EndAddMark(System.IAsyncResult result) {
            return base.Channel.EndAddMark(result);
        }
        
        private System.IAsyncResult OnBeginAddMark(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int id_expertise = ((int)(inValues[0]));
            int id_expert = ((int)(inValues[1]));
            int id_project = ((int)(inValues[2]));
            int id_criterion = ((int)(inValues[3]));
            double value = ((double)(inValues[4]));
            return this.BeginAddMark(id_expertise, id_expert, id_project, id_criterion, value, callback, asyncState);
        }
        
        private object[] OnEndAddMark(System.IAsyncResult result) {
            int retVal = this.EndAddMark(result);
            return new object[] {
                    retVal};
        }
        
        private void OnAddMarkCompleted(object state) {
            if ((this.AddMarkCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AddMarkCompleted(this, new AddMarkCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AddMarkAsync(int id_expertise, int id_expert, int id_project, int id_criterion, double value) {
            this.AddMarkAsync(id_expertise, id_expert, id_project, id_criterion, value, null);
        }
        
        public void AddMarkAsync(int id_expertise, int id_expert, int id_project, int id_criterion, double value, object userState) {
            if ((this.onBeginAddMarkDelegate == null)) {
                this.onBeginAddMarkDelegate = new BeginOperationDelegate(this.OnBeginAddMark);
            }
            if ((this.onEndAddMarkDelegate == null)) {
                this.onEndAddMarkDelegate = new EndOperationDelegate(this.OnEndAddMark);
            }
            if ((this.onAddMarkCompletedDelegate == null)) {
                this.onAddMarkCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAddMarkCompleted);
            }
            base.InvokeAsync(this.onBeginAddMarkDelegate, new object[] {
                        id_expertise,
                        id_expert,
                        id_project,
                        id_criterion,
                        value}, this.onEndAddMarkDelegate, this.onAddMarkCompletedDelegate, userState);
        }
        
        public int AddResultExpert(int id_expertise, int id_expert, int id_project, double value) {
            return base.Channel.AddResultExpert(id_expertise, id_expert, id_project, value);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginAddResultExpert(int id_expertise, int id_expert, int id_project, double value, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAddResultExpert(id_expertise, id_expert, id_project, value, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public int EndAddResultExpert(System.IAsyncResult result) {
            return base.Channel.EndAddResultExpert(result);
        }
        
        private System.IAsyncResult OnBeginAddResultExpert(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int id_expertise = ((int)(inValues[0]));
            int id_expert = ((int)(inValues[1]));
            int id_project = ((int)(inValues[2]));
            double value = ((double)(inValues[3]));
            return this.BeginAddResultExpert(id_expertise, id_expert, id_project, value, callback, asyncState);
        }
        
        private object[] OnEndAddResultExpert(System.IAsyncResult result) {
            int retVal = this.EndAddResultExpert(result);
            return new object[] {
                    retVal};
        }
        
        private void OnAddResultExpertCompleted(object state) {
            if ((this.AddResultExpertCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AddResultExpertCompleted(this, new AddResultExpertCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AddResultExpertAsync(int id_expertise, int id_expert, int id_project, double value) {
            this.AddResultExpertAsync(id_expertise, id_expert, id_project, value, null);
        }
        
        public void AddResultExpertAsync(int id_expertise, int id_expert, int id_project, double value, object userState) {
            if ((this.onBeginAddResultExpertDelegate == null)) {
                this.onBeginAddResultExpertDelegate = new BeginOperationDelegate(this.OnBeginAddResultExpert);
            }
            if ((this.onEndAddResultExpertDelegate == null)) {
                this.onEndAddResultExpertDelegate = new EndOperationDelegate(this.OnEndAddResultExpert);
            }
            if ((this.onAddResultExpertCompletedDelegate == null)) {
                this.onAddResultExpertCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAddResultExpertCompleted);
            }
            base.InvokeAsync(this.onBeginAddResultExpertDelegate, new object[] {
                        id_expertise,
                        id_expert,
                        id_project,
                        value}, this.onEndAddResultExpertDelegate, this.onAddResultExpertCompletedDelegate, userState);
        }
        
        public int AddStatusExpertiseExpert(int id_expertise, int id_expert) {
            return base.Channel.AddStatusExpertiseExpert(id_expertise, id_expert);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginAddStatusExpertiseExpert(int id_expertise, int id_expert, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAddStatusExpertiseExpert(id_expertise, id_expert, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public int EndAddStatusExpertiseExpert(System.IAsyncResult result) {
            return base.Channel.EndAddStatusExpertiseExpert(result);
        }
        
        private System.IAsyncResult OnBeginAddStatusExpertiseExpert(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int id_expertise = ((int)(inValues[0]));
            int id_expert = ((int)(inValues[1]));
            return this.BeginAddStatusExpertiseExpert(id_expertise, id_expert, callback, asyncState);
        }
        
        private object[] OnEndAddStatusExpertiseExpert(System.IAsyncResult result) {
            int retVal = this.EndAddStatusExpertiseExpert(result);
            return new object[] {
                    retVal};
        }
        
        private void OnAddStatusExpertiseExpertCompleted(object state) {
            if ((this.AddStatusExpertiseExpertCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AddStatusExpertiseExpertCompleted(this, new AddStatusExpertiseExpertCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AddStatusExpertiseExpertAsync(int id_expertise, int id_expert) {
            this.AddStatusExpertiseExpertAsync(id_expertise, id_expert, null);
        }
        
        public void AddStatusExpertiseExpertAsync(int id_expertise, int id_expert, object userState) {
            if ((this.onBeginAddStatusExpertiseExpertDelegate == null)) {
                this.onBeginAddStatusExpertiseExpertDelegate = new BeginOperationDelegate(this.OnBeginAddStatusExpertiseExpert);
            }
            if ((this.onEndAddStatusExpertiseExpertDelegate == null)) {
                this.onEndAddStatusExpertiseExpertDelegate = new EndOperationDelegate(this.OnEndAddStatusExpertiseExpert);
            }
            if ((this.onAddStatusExpertiseExpertCompletedDelegate == null)) {
                this.onAddStatusExpertiseExpertCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAddStatusExpertiseExpertCompleted);
            }
            base.InvokeAsync(this.onBeginAddStatusExpertiseExpertDelegate, new object[] {
                        id_expertise,
                        id_expert}, this.onEndAddStatusExpertiseExpertDelegate, this.onAddStatusExpertiseExpertCompletedDelegate, userState);
        }
        
        public int AddStatusExpertise(int id_expertise) {
            return base.Channel.AddStatusExpertise(id_expertise);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginAddStatusExpertise(int id_expertise, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAddStatusExpertise(id_expertise, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public int EndAddStatusExpertise(System.IAsyncResult result) {
            return base.Channel.EndAddStatusExpertise(result);
        }
        
        private System.IAsyncResult OnBeginAddStatusExpertise(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int id_expertise = ((int)(inValues[0]));
            return this.BeginAddStatusExpertise(id_expertise, callback, asyncState);
        }
        
        private object[] OnEndAddStatusExpertise(System.IAsyncResult result) {
            int retVal = this.EndAddStatusExpertise(result);
            return new object[] {
                    retVal};
        }
        
        private void OnAddStatusExpertiseCompleted(object state) {
            if ((this.AddStatusExpertiseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AddStatusExpertiseCompleted(this, new AddStatusExpertiseCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AddStatusExpertiseAsync(int id_expertise) {
            this.AddStatusExpertiseAsync(id_expertise, null);
        }
        
        public void AddStatusExpertiseAsync(int id_expertise, object userState) {
            if ((this.onBeginAddStatusExpertiseDelegate == null)) {
                this.onBeginAddStatusExpertiseDelegate = new BeginOperationDelegate(this.OnBeginAddStatusExpertise);
            }
            if ((this.onEndAddStatusExpertiseDelegate == null)) {
                this.onEndAddStatusExpertiseDelegate = new EndOperationDelegate(this.OnEndAddStatusExpertise);
            }
            if ((this.onAddStatusExpertiseCompletedDelegate == null)) {
                this.onAddStatusExpertiseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAddStatusExpertiseCompleted);
            }
            base.InvokeAsync(this.onBeginAddStatusExpertiseDelegate, new object[] {
                        id_expertise}, this.onEndAddStatusExpertiseDelegate, this.onAddStatusExpertiseCompletedDelegate, userState);
        }
        
        public int AddMarkPospelov(int id_expertise, int id_expert, System.Collections.Generic.Dictionary<int, float> dic_ribs_val, System.Collections.Generic.Dictionary<int, float> dic_facs_val) {
            return base.Channel.AddMarkPospelov(id_expertise, id_expert, dic_ribs_val, dic_facs_val);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginAddMarkPospelov(int id_expertise, int id_expert, System.Collections.Generic.Dictionary<int, float> dic_ribs_val, System.Collections.Generic.Dictionary<int, float> dic_facs_val, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAddMarkPospelov(id_expertise, id_expert, dic_ribs_val, dic_facs_val, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public int EndAddMarkPospelov(System.IAsyncResult result) {
            return base.Channel.EndAddMarkPospelov(result);
        }
        
        private System.IAsyncResult OnBeginAddMarkPospelov(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int id_expertise = ((int)(inValues[0]));
            int id_expert = ((int)(inValues[1]));
            System.Collections.Generic.Dictionary<int, float> dic_ribs_val = ((System.Collections.Generic.Dictionary<int, float>)(inValues[2]));
            System.Collections.Generic.Dictionary<int, float> dic_facs_val = ((System.Collections.Generic.Dictionary<int, float>)(inValues[3]));
            return this.BeginAddMarkPospelov(id_expertise, id_expert, dic_ribs_val, dic_facs_val, callback, asyncState);
        }
        
        private object[] OnEndAddMarkPospelov(System.IAsyncResult result) {
            int retVal = this.EndAddMarkPospelov(result);
            return new object[] {
                    retVal};
        }
        
        private void OnAddMarkPospelovCompleted(object state) {
            if ((this.AddMarkPospelovCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AddMarkPospelovCompleted(this, new AddMarkPospelovCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AddMarkPospelovAsync(int id_expertise, int id_expert, System.Collections.Generic.Dictionary<int, float> dic_ribs_val, System.Collections.Generic.Dictionary<int, float> dic_facs_val) {
            this.AddMarkPospelovAsync(id_expertise, id_expert, dic_ribs_val, dic_facs_val, null);
        }
        
        public void AddMarkPospelovAsync(int id_expertise, int id_expert, System.Collections.Generic.Dictionary<int, float> dic_ribs_val, System.Collections.Generic.Dictionary<int, float> dic_facs_val, object userState) {
            if ((this.onBeginAddMarkPospelovDelegate == null)) {
                this.onBeginAddMarkPospelovDelegate = new BeginOperationDelegate(this.OnBeginAddMarkPospelov);
            }
            if ((this.onEndAddMarkPospelovDelegate == null)) {
                this.onEndAddMarkPospelovDelegate = new EndOperationDelegate(this.OnEndAddMarkPospelov);
            }
            if ((this.onAddMarkPospelovCompletedDelegate == null)) {
                this.onAddMarkPospelovCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAddMarkPospelovCompleted);
            }
            base.InvokeAsync(this.onBeginAddMarkPospelovDelegate, new object[] {
                        id_expertise,
                        id_expert,
                        dic_ribs_val,
                        dic_facs_val}, this.onEndAddMarkPospelovDelegate, this.onAddMarkPospelovCompletedDelegate, userState);
        }
        
        public int AddResultMarkPospelov(int id_expertise) {
            return base.Channel.AddResultMarkPospelov(id_expertise);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginAddResultMarkPospelov(int id_expertise, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAddResultMarkPospelov(id_expertise, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public int EndAddResultMarkPospelov(System.IAsyncResult result) {
            return base.Channel.EndAddResultMarkPospelov(result);
        }
        
        private System.IAsyncResult OnBeginAddResultMarkPospelov(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int id_expertise = ((int)(inValues[0]));
            return this.BeginAddResultMarkPospelov(id_expertise, callback, asyncState);
        }
        
        private object[] OnEndAddResultMarkPospelov(System.IAsyncResult result) {
            int retVal = this.EndAddResultMarkPospelov(result);
            return new object[] {
                    retVal};
        }
        
        private void OnAddResultMarkPospelovCompleted(object state) {
            if ((this.AddResultMarkPospelovCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AddResultMarkPospelovCompleted(this, new AddResultMarkPospelovCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AddResultMarkPospelovAsync(int id_expertise) {
            this.AddResultMarkPospelovAsync(id_expertise, null);
        }
        
        public void AddResultMarkPospelovAsync(int id_expertise, object userState) {
            if ((this.onBeginAddResultMarkPospelovDelegate == null)) {
                this.onBeginAddResultMarkPospelovDelegate = new BeginOperationDelegate(this.OnBeginAddResultMarkPospelov);
            }
            if ((this.onEndAddResultMarkPospelovDelegate == null)) {
                this.onEndAddResultMarkPospelovDelegate = new EndOperationDelegate(this.OnEndAddResultMarkPospelov);
            }
            if ((this.onAddResultMarkPospelovCompletedDelegate == null)) {
                this.onAddResultMarkPospelovCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAddResultMarkPospelovCompleted);
            }
            base.InvokeAsync(this.onBeginAddResultMarkPospelovDelegate, new object[] {
                        id_expertise}, this.onEndAddResultMarkPospelovDelegate, this.onAddResultMarkPospelovCompletedDelegate, userState);
        }
        
        public int EditCriterion(int id_criterion, string name) {
            return base.Channel.EditCriterion(id_criterion, name);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginEditCriterion(int id_criterion, string name, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginEditCriterion(id_criterion, name, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public int EndEditCriterion(System.IAsyncResult result) {
            return base.Channel.EndEditCriterion(result);
        }
        
        private System.IAsyncResult OnBeginEditCriterion(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int id_criterion = ((int)(inValues[0]));
            string name = ((string)(inValues[1]));
            return this.BeginEditCriterion(id_criterion, name, callback, asyncState);
        }
        
        private object[] OnEndEditCriterion(System.IAsyncResult result) {
            int retVal = this.EndEditCriterion(result);
            return new object[] {
                    retVal};
        }
        
        private void OnEditCriterionCompleted(object state) {
            if ((this.EditCriterionCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.EditCriterionCompleted(this, new EditCriterionCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void EditCriterionAsync(int id_criterion, string name) {
            this.EditCriterionAsync(id_criterion, name, null);
        }
        
        public void EditCriterionAsync(int id_criterion, string name, object userState) {
            if ((this.onBeginEditCriterionDelegate == null)) {
                this.onBeginEditCriterionDelegate = new BeginOperationDelegate(this.OnBeginEditCriterion);
            }
            if ((this.onEndEditCriterionDelegate == null)) {
                this.onEndEditCriterionDelegate = new EndOperationDelegate(this.OnEndEditCriterion);
            }
            if ((this.onEditCriterionCompletedDelegate == null)) {
                this.onEditCriterionCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnEditCriterionCompleted);
            }
            base.InvokeAsync(this.onBeginEditCriterionDelegate, new object[] {
                        id_criterion,
                        name}, this.onEndEditCriterionDelegate, this.onEditCriterionCompletedDelegate, userState);
        }
        
        public int EditExpert(int id_expert, string first_name, string second_name, string patronymic, string login, string password, int accses) {
            return base.Channel.EditExpert(id_expert, first_name, second_name, patronymic, login, password, accses);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginEditExpert(int id_expert, string first_name, string second_name, string patronymic, string login, string password, int accses, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginEditExpert(id_expert, first_name, second_name, patronymic, login, password, accses, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public int EndEditExpert(System.IAsyncResult result) {
            return base.Channel.EndEditExpert(result);
        }
        
        private System.IAsyncResult OnBeginEditExpert(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int id_expert = ((int)(inValues[0]));
            string first_name = ((string)(inValues[1]));
            string second_name = ((string)(inValues[2]));
            string patronymic = ((string)(inValues[3]));
            string login = ((string)(inValues[4]));
            string password = ((string)(inValues[5]));
            int accses = ((int)(inValues[6]));
            return this.BeginEditExpert(id_expert, first_name, second_name, patronymic, login, password, accses, callback, asyncState);
        }
        
        private object[] OnEndEditExpert(System.IAsyncResult result) {
            int retVal = this.EndEditExpert(result);
            return new object[] {
                    retVal};
        }
        
        private void OnEditExpertCompleted(object state) {
            if ((this.EditExpertCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.EditExpertCompleted(this, new EditExpertCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void EditExpertAsync(int id_expert, string first_name, string second_name, string patronymic, string login, string password, int accses) {
            this.EditExpertAsync(id_expert, first_name, second_name, patronymic, login, password, accses, null);
        }
        
        public void EditExpertAsync(int id_expert, string first_name, string second_name, string patronymic, string login, string password, int accses, object userState) {
            if ((this.onBeginEditExpertDelegate == null)) {
                this.onBeginEditExpertDelegate = new BeginOperationDelegate(this.OnBeginEditExpert);
            }
            if ((this.onEndEditExpertDelegate == null)) {
                this.onEndEditExpertDelegate = new EndOperationDelegate(this.OnEndEditExpert);
            }
            if ((this.onEditExpertCompletedDelegate == null)) {
                this.onEditExpertCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnEditExpertCompleted);
            }
            base.InvokeAsync(this.onBeginEditExpertDelegate, new object[] {
                        id_expert,
                        first_name,
                        second_name,
                        patronymic,
                        login,
                        password,
                        accses}, this.onEndEditExpertDelegate, this.onEditExpertCompletedDelegate, userState);
        }
        
        public int EditProject(int id_project, string name) {
            return base.Channel.EditProject(id_project, name);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginEditProject(int id_project, string name, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginEditProject(id_project, name, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public int EndEditProject(System.IAsyncResult result) {
            return base.Channel.EndEditProject(result);
        }
        
        private System.IAsyncResult OnBeginEditProject(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int id_project = ((int)(inValues[0]));
            string name = ((string)(inValues[1]));
            return this.BeginEditProject(id_project, name, callback, asyncState);
        }
        
        private object[] OnEndEditProject(System.IAsyncResult result) {
            int retVal = this.EndEditProject(result);
            return new object[] {
                    retVal};
        }
        
        private void OnEditProjectCompleted(object state) {
            if ((this.EditProjectCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.EditProjectCompleted(this, new EditProjectCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void EditProjectAsync(int id_project, string name) {
            this.EditProjectAsync(id_project, name, null);
        }
        
        public void EditProjectAsync(int id_project, string name, object userState) {
            if ((this.onBeginEditProjectDelegate == null)) {
                this.onBeginEditProjectDelegate = new BeginOperationDelegate(this.OnBeginEditProject);
            }
            if ((this.onEndEditProjectDelegate == null)) {
                this.onEndEditProjectDelegate = new EndOperationDelegate(this.OnEndEditProject);
            }
            if ((this.onEditProjectCompletedDelegate == null)) {
                this.onEditProjectCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnEditProjectCompleted);
            }
            base.InvokeAsync(this.onBeginEditProjectDelegate, new object[] {
                        id_project,
                        name}, this.onEndEditProjectDelegate, this.onEditProjectCompletedDelegate, userState);
        }
    }
}
